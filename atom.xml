<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>codingAc&#39;s blog</title>
  
  <subtitle>改变,永远不嫌晚</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-29T14:24:37.170Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Achun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用freemarker导出Word 2018-08-29</title>
    <link href="http://yoursite.com/2018/08/29/%E4%BD%BF%E7%94%A8freemarker%E5%AF%BC%E5%87%BAWord-2018-08-29/"/>
    <id>http://yoursite.com/2018/08/29/使用freemarker导出Word-2018-08-29/</id>
    <published>2018-08-29T07:54:58.000Z</published>
    <updated>2018-08-29T14:24:37.170Z</updated>
    
    <content type="html"><![CDATA[<p>这里主要是参考一些网上大神的案例，不过也要记录一下。便于以后自己学习，也可以给其他人做参考。我做的不一定对。<br><a id="more"></a></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>其实我也看过一些用POI或者其他工具进行导出Word，都感觉挺好的。这次记录一下自己使用freemarker进行Word导出。<br>首先电脑上要有Word，感觉这一点不是很好。但总体上来说，就是使用Word制作一个模板，用一些占位符在Word中。<br>因为使用freemarker可以将占位符替换成自己想要的内容，这里我只做了一个表格模板。其他情况可以参考下方链接。</p><h2 id="导入jar包"><a href="#导入jar包" class="headerlink" title="导入jar包"></a>导入jar包</h2><p>我这里使用的maven工程。所以只需要引入相应的坐标就可以将jar包引入。如果是普通web项目 可以自行去下jar包。<br>POM文件：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.freemarker&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;freemarker&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;2.3.28&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>Jar下载链接：<br><a href="https://freemarker.apache.org/freemarkerdownload.html" target="_blank" rel="noopener">https://freemarker.apache.org/freemarkerdownload.html</a></p><h2 id="Word模板"><a href="#Word模板" class="headerlink" title="Word模板"></a>Word模板</h2><p>用Word制作好模板。调成自己想要的样式，我目前是调成这个样式，建议先调整好样式，不然保存成xml不好改样式。<br>这里首先使用占位符，前面也提到了。便于将自己的数据放到表格里面。这里如果有图片，先放上图片。因为这样可以<br>进行该一些模板里面的东西。保存成xml可以将图片里面的信息换成占位符，可以随时进行替换。<br><img src="/images/wordmuban.png" alt="word模板"><br>PS：这里我没有用WPS试过，如果都是保存成XML应该是可以的。这里我使用的word 2013版本。<br>编辑好之后需要将格式存成XML格式。如果存成别的，可能不能导出或者其他的一些问题。如下图所示：<br><img src="/images/lingcunwei.png" alt="word另存为"><br>这里需要提醒一下，数据很多 如果打开编辑的话，建议适应一些工具，我这里使用的是IDEA，可以使用notepad++，或者一些<br>便于XML文件编辑的工具。首先将xml后缀名改成ftl文件为后缀的，在IDEA可以使用里面的标签代码。</p><h2 id="Ftl模板-文字处理"><a href="#Ftl模板-文字处理" class="headerlink" title="Ftl模板(文字处理)"></a>Ftl模板(文字处理)</h2><p><img src="/images/ftlmuban.png" alt="FtL模板"><br>这里模板的信息我不是很了解，这里我贴出一些我认为比较关键地方的东西。首先全局查找在模板中自己存的占位符，很有可能会<br>被打乱。但是存成Word XML 格式应该不会有错。这里w:t就是要存放的数据。这里只要占位符和后台传的数据一样就行。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">w:r</span> <span class="attr">wsp:rsidRPr</span>=<span class="string">"00182F67"</span>&gt;</span><span class="tag">&lt;<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:rFonts</span> <span class="attr">w:ascii</span>=<span class="string">"宋体"</span> <span class="attr">w:h-ansi</span>=<span class="string">"宋体"</span> <span class="attr">w:hint</span>=<span class="string">"fareast"</span>/&gt;</span><span class="tag">&lt;<span class="name">wx:font</span> <span class="attr">wx:val</span>=<span class="string">"宋体"</span>/&gt;</span><span class="tag">&lt;<span class="name">w:sz</span> <span class="attr">w:val</span>=<span class="string">"28"</span>/&gt;</span><span class="tag">&lt;<span class="name">w:sz-cs</span> <span class="attr">w:val</span>=<span class="string">"28"</span>/&gt;</span><span class="tag">&lt;/<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:t</span>&gt;</span>$&#123;username&#125;<span class="tag">&lt;/<span class="name">w:t</span>&gt;</span><span class="tag">&lt;/<span class="name">w:r</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>如果是多条数据可以加上freemarker语法，遍历List，并放入指定的位置。具体语法如下 在需要遍历的tr前面加上&lt;#list 自己后台传的list as name<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span><span class="tag">&lt;<span class="name">#list</span> <span class="attr">messageList</span> <span class="attr">as</span> <span class="attr">message</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">w:tr</span> <span class="attr">wsp:rsidR</span>=<span class="string">"004255BB"</span> <span class="attr">wsp:rsidRPr</span>=<span class="string">"00182F67"</span> <span class="attr">wsp:rsidTr</span>=<span class="string">"00182F67"</span>&gt;</span></span><br><span class="line">我这里可以直接.出来想要的数据在规定的位置，也是使用占位符<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span><span class="tag">&lt;<span class="name">w:t</span>&gt;</span>$&#123;message.name&#125;<span class="tag">&lt;/<span class="name">w:t</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">w:tr</span>&gt;</span><span class="tag">&lt;/<span class="name">#list</span>&gt;</span> 注意这里有结束的标签。不然会报错。</span><br></pre></td></tr></table></figure></p><h2 id="Ftl模板-图片处理"><a href="#Ftl模板-图片处理" class="headerlink" title="Ftl模板(图片处理)"></a>Ftl模板(图片处理)</h2><p>上面只是处理了一些文字，这里处理一些图片的处理，因为之前在模板中我们已经放了图片，所以在ftl模板中直接将图片的base64码改成占位符<br>首先找到binData，将底下的Base64码改成占位符<br><img src="/images/ftlxinxi.png" alt="FtL信息"><br>改成如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">w:binData</span> <span class="attr">w:name</span>=<span class="string">"wordml://02000001.jpg"</span> <span class="attr">xml:space</span>=<span class="string">"preserve"</span>&gt;</span>$&#123;自己取的占位符&#125;<span class="tag">&lt;/<span class="name">w:binData</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>上面主要是展示一张图片，如果有多张，可以用上面的方式，将图片变成List遍历取出图片即可。<br>这里需要注意的是多张图片只显示一张的原因。w:name和src下的图片名称不能一样，所以src=”${“wordml://0300000”+img_index + 1 + “.png”}”<br>这种方式来解决，一开始我这里判断是否为空，如果为空就不显示，不判断的话，如果没有图片，导出的word中会有空白图片的存在。<br>&lt;#list imgList as img&gt;&lt;#if img.jiejueUrl != “”&gt;&lt;#else &gt;&lt;w:p&gt;&lt;/w:p&gt;&lt;/#if&gt;&lt;/#list&gt;具体可以参考下<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">w:tr</span> <span class="attr">wsp:rsidR</span>=<span class="string">"001B01DD"</span> <span class="attr">wsp:rsidRPr</span>=<span class="string">"00182F67"</span> <span class="attr">wsp:rsidTr</span>=<span class="string">"00182F67"</span>&gt;</span><span class="tag">&lt;<span class="name">w:tc</span>&gt;</span><span class="tag">&lt;<span class="name">w:tcPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:tcW</span> <span class="attr">w:w</span>=<span class="string">"4148"</span> <span class="attr">w:type</span>=<span class="string">"dxa"</span>/&gt;</span><span class="tag">&lt;<span class="name">w:shd</span> <span class="attr">w:val</span>=<span class="string">"clear"</span> <span class="attr">w:color</span>=<span class="string">"auto"</span> <span class="attr">w:fill</span>=<span class="string">"auto"</span>/&gt;</span><span class="tag">&lt;/<span class="name">w:tcPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:p</span> <span class="attr">wsp:rsidR</span>=<span class="string">"001B01DD"</span> <span class="attr">wsp:rsidRPr</span>=<span class="string">"00182F67"</span> <span class="attr">wsp:rsidRDefault</span>=<span class="string">"001B01DD"</span> <span class="attr">wsp:rsidP</span>=<span class="string">"00182F67"</span>&gt;</span><span class="tag">&lt;<span class="name">w:pPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:jc</span> <span class="attr">w:val</span>=<span class="string">"left"</span>/&gt;</span><span class="tag">&lt;<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:sz</span> <span class="attr">w:val</span>=<span class="string">"28"</span>/&gt;</span><span class="tag">&lt;<span class="name">w:sz-cs</span> <span class="attr">w:val</span>=<span class="string">"28"</span>/&gt;</span><span class="tag">&lt;/<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;/<span class="name">w:pPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:r</span> <span class="attr">wsp:rsidRPr</span>=<span class="string">"00182F67"</span>&gt;</span><span class="tag">&lt;<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:sz</span> <span class="attr">w:val</span>=<span class="string">"28"</span>/&gt;</span><span class="tag">&lt;<span class="name">w:sz-cs</span> <span class="attr">w:val</span>=<span class="string">"28"</span>/&gt;</span><span class="tag">&lt;/<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:t</span>&gt;</span>$&#123;content&#125;<span class="tag">&lt;/<span class="name">w:t</span>&gt;</span><span class="tag">&lt;/<span class="name">w:r</span>&gt;</span><span class="tag">&lt;/<span class="name">w:p</span>&gt;</span><span class="tag">&lt;/<span class="name">w:tc</span>&gt;</span><span class="tag">&lt;<span class="name">w:tc</span>&gt;</span><span class="tag">&lt;<span class="name">w:tcPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:tcW</span> <span class="attr">w:w</span>=<span class="string">"4148"</span> <span class="attr">w:type</span>=<span class="string">"dxa"</span>/&gt;</span><span class="tag">&lt;<span class="name">w:shd</span> <span class="attr">w:val</span>=<span class="string">"clear"</span> <span class="attr">w:color</span>=<span class="string">"auto"</span> <span class="attr">w:fill</span>=<span class="string">"auto"</span>/&gt;</span><span class="tag">&lt;/<span class="name">w:tcPr</span>&gt;</span><span class="tag">&lt;<span class="name">#list</span> <span class="attr">imgList</span> <span class="attr">as</span> <span class="attr">img</span>&gt;</span><span class="tag">&lt;<span class="name">#if</span> <span class="attr">img.jiejueUrl</span> != <span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">w:p</span> <span class="attr">wsp:rsidR</span>=<span class="string">"001B01DD"</span> <span class="attr">wsp:rsidRPr</span>=<span class="string">"00182F67"</span> <span class="attr">wsp:rsidRDefault</span>=<span class="string">"003A4BDD"</span> <span class="attr">wsp:rsidP</span>=<span class="string">"00182F67"</span>&gt;</span><span class="tag">&lt;<span class="name">w:pPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:jc</span> <span class="attr">w:val</span>=<span class="string">"center"</span>/&gt;</span><span class="tag">&lt;<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:b</span>/&gt;</span><span class="tag">&lt;<span class="name">w:sz</span> <span class="attr">w:val</span>=<span class="string">"28"</span>/&gt;</span><span class="tag">&lt;<span class="name">w:sz-cs</span> <span class="attr">w:val</span>=<span class="string">"28"</span>/&gt;</span><span class="tag">&lt;/<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;/<span class="name">w:pPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:r</span> <span class="attr">wsp:rsidRPr</span>=<span class="string">"003A4BDD"</span>&gt;</span><span class="tag">&lt;<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:b</span>/&gt;</span><span class="tag">&lt;<span class="name">w:sz</span> <span class="attr">w:val</span>=<span class="string">"28"</span>/&gt;</span><span class="tag">&lt;<span class="name">w:sz-cs</span> <span class="attr">w:val</span>=<span class="string">"28"</span>/&gt;</span><span class="tag">&lt;/<span class="name">w:rPr</span>&gt;</span><span class="tag">&lt;<span class="name">w:pict</span>&gt;</span><span class="tag">&lt;<span class="name">w:binData</span> <span class="attr">w:name</span>=<span class="string">"$&#123;"</span><span class="attr">wordml:</span>//<span class="attr">0300000</span>"+<span class="attr">img_index</span> + <span class="attr">1</span> + "<span class="attr">.png</span>"&#125;" <span class="attr">xml:space</span>=<span class="string">"preserve"</span>&gt;</span>$&#123;img.jiejueUrl&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">w:binData</span>&gt;</span><span class="tag">&lt;<span class="name">v:shape</span> <span class="attr">id</span>=<span class="string">"_x0000_i1026"</span> <span class="attr">type</span>=<span class="string">"#_x0000_t75"</span> <span class="attr">style</span>=<span class="string">"width:180pt;height:180pt"</span>&gt;</span><span class="tag">&lt;<span class="name">v:imagedata</span> <span class="attr">src</span>=<span class="string">"$&#123;"</span><span class="attr">wordml:</span>//<span class="attr">0300000</span>"+<span class="attr">img_index</span> + <span class="attr">1</span> + "<span class="attr">.png</span>"&#125;" <span class="attr">o:title</span>=<span class="string">"L4GSV(&#125;~LA[A2LH3CLZWXUL"</span>/&gt;</span><span class="tag">&lt;/<span class="name">v:shape</span>&gt;</span><span class="tag">&lt;/<span class="name">w:pict</span>&gt;</span><span class="tag">&lt;/<span class="name">w:r</span>&gt;</span><span class="tag">&lt;/<span class="name">w:p</span>&gt;</span><span class="tag">&lt;<span class="name">#else</span> &gt;</span><span class="tag">&lt;<span class="name">w:p</span>&gt;</span><span class="tag">&lt;/<span class="name">w:p</span>&gt;</span><span class="tag">&lt;/<span class="name">#if</span>&gt;</span><span class="tag">&lt;/<span class="name">#list</span>&gt;</span><span class="tag">&lt;/<span class="name">w:tc</span>&gt;</span><span class="tag">&lt;/<span class="name">w:tr</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>PS：freemarker需要注意的就是null值的判断，这块很不友好。</p><h1 id="后台代码"><a href="#后台代码" class="headerlink" title="后台代码"></a>后台代码</h1><p>这里直接使用人家的代码，都贴出来。只需要自己在Controller做处理就行。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wycfight@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-08-22 11:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@modified</span> By:</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> freemarker.template.Configuration;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.Template;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置信息,代码本身写的还是很可读的,就不过多注解了</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Configuration configuration = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">//这里注意的是利用WordUtils的类加载器动态获得模板文件的位置</span></span><br><span class="line">    <span class="comment">// private static final String templateFolder = WordUtils.class.getClassLoader().getResource("../../").getPath() + "WEB-INF/templetes/";</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String templateFolder = <span class="string">"/"</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        configuration = <span class="keyword">new</span> Configuration(Configuration.VERSION_2_3_0);</span><br><span class="line">        configuration.setDefaultEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            configuration.setClassForTemplateLoading(WordUtil.class,templateFolder);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">WordUtil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exportMillCertificateWord</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Map map, String title, String ftlFile)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Template freemarkerTemplate = configuration.getTemplate(ftlFile);</span><br><span class="line">        File file = <span class="keyword">null</span>;</span><br><span class="line">        InputStream fin = <span class="keyword">null</span>;</span><br><span class="line">        ServletOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 调用工具类的createDoc方法生成Word文档</span></span><br><span class="line">            file = createDoc(map,freemarkerTemplate);</span><br><span class="line">            fin = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line"></span><br><span class="line">            response.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">            response.setContentType(<span class="string">"application/msword"</span>);</span><br><span class="line">            Random r = <span class="keyword">new</span> Random();</span><br><span class="line">            SimpleDateFormat sdf1 = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>);</span><br><span class="line">            StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            sb.append(sdf1.format(<span class="keyword">new</span> Date()));</span><br><span class="line">            sb.append(<span class="string">"_"</span>);</span><br><span class="line">            sb.append(r.nextInt(<span class="number">100</span>));</span><br><span class="line">            <span class="comment">// 设置浏览器以下载的方式处理该文件名</span></span><br><span class="line">            String fileName = title+sb + <span class="string">".doc"</span>;</span><br><span class="line">            response.setHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;filename="</span></span><br><span class="line">                    .concat(String.valueOf(URLEncoder.encode(fileName, <span class="string">"UTF-8"</span>))));</span><br><span class="line"></span><br><span class="line">            out = response.getOutputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">512</span>];  <span class="comment">// 缓冲区</span></span><br><span class="line">            <span class="keyword">int</span> bytesToRead = -<span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 通过循环将读入的Word文件的内容输出到浏览器中</span></span><br><span class="line">            <span class="keyword">while</span>((bytesToRead = fin.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                out.write(buffer, <span class="number">0</span>, bytesToRead);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(fin != <span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                fin.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(out != <span class="keyword">null</span>)&#123;</span><br><span class="line">                out.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 删除临时文件</span></span><br><span class="line">            <span class="keyword">if</span>(file != <span class="keyword">null</span>) &#123;</span><br><span class="line">                file.delete();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> File <span class="title">createDoc</span><span class="params">(Map&lt;?, ?&gt; dataMap, Template template)</span> </span>&#123;</span><br><span class="line">        String name =  <span class="string">"sellPlan.doc"</span>;</span><br><span class="line">        File f = <span class="keyword">new</span> File(name);</span><br><span class="line">        Template t = template;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 这个地方不能使用FileWriter因为需要指定编码类型否则生成的Word文档会因为有无法识别的编码而无法打开</span></span><br><span class="line">            Writer w = <span class="keyword">new</span> OutputStreamWriter(<span class="keyword">new</span> FileOutputStream(f), <span class="string">"utf-8"</span>);</span><br><span class="line">            t.process(dataMap, w);</span><br><span class="line">            w.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(ex);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>具体的Controller代码如下：<br>处理图片的代码，将图片转成Base64并返回。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取图片的base64码</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@SuppressWarnings</span>(<span class="string">"deprecation"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getImageBase</span><span class="params">(String src, HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(src==<span class="keyword">null</span>||src==<span class="string">""</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       File file = <span class="keyword">new</span> File(request.getRealPath(<span class="string">"/"</span>)+src.replace(request.getContextPath(), <span class="string">""</span>));</span><br><span class="line">       <span class="keyword">if</span>(!file.exists()) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       InputStream in = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">byte</span>[] data = <span class="keyword">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           in = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (FileNotFoundException e1) &#123;</span><br><span class="line">           e1.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           data = <span class="keyword">new</span> <span class="keyword">byte</span>[in.available()];</span><br><span class="line">           in.read(data);</span><br><span class="line">           in.close();</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       BASE64Encoder encoder = <span class="keyword">new</span> BASE64Encoder();</span><br><span class="line">       <span class="keyword">return</span> encoder.encode(data);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>后台代码实现，将查询出来的数据存放到map中，只需要保证名字和占位符的一样就可以。我在这里就进行了判null处理 ，用List<map>存放图片信息，这块还可以完善<br>，目前我技术有限，可能写的比较垃圾。但是如果能给你带来一些帮助。那真实太好了。<br>上面定义的url：</map></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出Word</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String EXPORT_WORD_URL = PERMISSION_URL_PREFIX + <span class="string">"/exportWord"</span>;</span><br></pre></td></tr></table></figure><p>具体代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出Word</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequiresPermissions</span>(EXPORT_WORD_URL)</span><br><span class="line">    <span class="meta">@RequestMapping</span>(EXPORT_WORD_URL)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exportWord</span><span class="params">(HttpServletRequest request, HttpServletResponse response, String messageId)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; dataMap = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">        AdminWarning adminWarning = warningRepository.getOne(ToolStr.sToL(messageId,<span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 存放人员名称</span></span><br><span class="line">        List&lt;String&gt; username = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;PeopleLineTower&gt; people=peopleLineTowerRepository.findAllByAdminLineIdOrAdminTowerId(adminWarning.getTower().getLine().getId(),adminWarning.getTower().getId());</span><br><span class="line">        <span class="keyword">for</span> (PeopleLineTower peopleLineTower:people) &#123;</span><br><span class="line">            username.add(peopleLineTower.getPeople().getSysUser().getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 首先查询出来所有的预警解决图片</span></span><br><span class="line">        <span class="comment">// 存放预警图片的</span></span><br><span class="line">        List&lt;Map&lt;String,Object&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        String uuidName = adminWarning.getUuidName();</span><br><span class="line">        String[] split = uuidName.split(<span class="string">","</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; split.length; i++) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            map.put(<span class="string">"jiejueUrl"</span>,getImageBase(<span class="string">"/"</span> + adminWarning.getPicture() + <span class="string">"/"</span> +split[i],request));</span><br><span class="line">            list.add(map);</span><br><span class="line">        &#125;</span><br><span class="line">        dataMap.put(<span class="string">"username"</span>,String.join(<span class="string">","</span>,username));</span><br><span class="line">        dataMap.put(<span class="string">"createdTime"</span>, adminWarning.getCreatedTime());</span><br><span class="line">        dataMap.put(<span class="string">"updataTime"</span>, adminWarning.getUpdataTime().getTime() &lt;= adminWarning.getCreatedTime().getTime() ? <span class="string">"尚未解决"</span> : adminWarning.getUpdataTime());</span><br><span class="line">        dataMap.put(<span class="string">"lineName"</span>, ToolStr.isEmpty(adminWarning.getTower().getLine().getName()) ? <span class="string">""</span> : adminWarning.getTower().getLine().getName());</span><br><span class="line">        dataMap.put(<span class="string">"towerName"</span>, ToolStr.isEmpty(adminWarning.getTower().getName()) ? <span class="string">""</span> : adminWarning.getTower().getName());</span><br><span class="line">        dataMap.put(<span class="string">"cameraName"</span>,ToolStr.isEmpty(adminWarning.getCamera().getName())?<span class="string">""</span> : adminWarning.getCamera().getName() );</span><br><span class="line">        dataMap.put(<span class="string">"info"</span>, ToolStr.isEmpty(adminWarning.getInfo()) ? <span class="string">""</span> : adminWarning.getInfo());</span><br><span class="line">        dataMap.put(<span class="string">"yujingUrl"</span>, getImageBase(<span class="string">"/"</span>+CameraController.FILE_URL + adminWarning.getImge().getCameraName() + <span class="string">"/"</span> + adminWarning.getImge().getUuidName(),request));</span><br><span class="line">        dataMap.put(<span class="string">"content"</span>, ToolStr.isEmpty(adminWarning.getFont())?<span class="string">""</span>:adminWarning.getFont());</span><br><span class="line">        dataMap.put(<span class="string">"imgList"</span>,list);</span><br><span class="line">        <span class="comment">/** 生成word */</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            WordUtil.exportMillCertificateWord(request,response,dataMap,<span class="string">"消息处理列表"</span>, <span class="string">"预警明细.ftl"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">## 前台Html页面</span><br><span class="line"></span><br><span class="line">前台导出word实现：</span><br><span class="line">```html</span><br><span class="line"> &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"r"</span>&gt;</span><br><span class="line">                &lt;a shiro:hasPermission=<span class="string">"$&#123;EXPORT_WORD_URL&#125;"</span> href=<span class="string">"javascript:;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-secondary radius"</span></span><br><span class="line">                   th:href=<span class="string">"@&#123;$&#123;EXPORT_WORD_URL+'?messageId='+id&#125;&#125;"</span>&gt;</span><br><span class="line">                    &lt;i class="Hui-iconfont"&gt;&amp;#xe644;&lt;/i&gt;导出Word</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">            &lt;/span&gt;</span><br></pre></td></tr></table></figure></p><h1 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h1><p>具体效果如下：<br>导出页面，这块还没有完善。<br><img src="/images/daochuhtml.png" alt="FtL信息"><br>具体导出的模板信息如下：这块图片和文字还不知道怎么处理，但可以实现简单的导文字和图片了。<br><img src="/images/worddaochu.png" alt="FtL信息"></p><p>搬运来自：<a href="https://www.cnblogs.com/zwqh/p/7182953.html" target="_blank" rel="noopener">https://www.cnblogs.com/zwqh/p/7182953.html</a> Java  用Freemarker完美导出word文档（带图片）<br><a href="https://blog.csdn.net/huangwenyi1010/article/details/51771551" target="_blank" rel="noopener">https://blog.csdn.net/huangwenyi1010/article/details/51771551</a>   Java之利用FreeMarker导出Word实例</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里主要是参考一些网上大神的案例，不过也要记录一下。便于以后自己学习，也可以给其他人做参考。我做的不一定对。&lt;br&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>批量导出Excel—2018-08-09</title>
    <link href="http://yoursite.com/2018/08/09/%E6%89%B9%E9%87%8F%E5%AF%BC%E5%87%BAExcel%E2%80%942018-08-09/"/>
    <id>http://yoursite.com/2018/08/09/批量导出Excel—2018-08-09/</id>
    <published>2018-08-09T05:50:07.000Z</published>
    <updated>2018-08-29T14:24:34.842Z</updated>
    
    <content type="html"><![CDATA[<p>这里主要是看大神代码，主要实现了，将所有要导出的信息，可以一键导出，并将文件压缩在文件夹中。<br><a id="more"></a><br>具体页面如下，导出之后会自动变成压缩包<br><img src="/images/daochuyemian.png" alt="导出页面"></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>首先要将所有要导出信息的数据查询出来，具体后台查询：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转台账一键导出市台账</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(TOONEKEYEXPORTEXCEL_URL + <span class="string">"1"</span>)</span><br><span class="line">    <span class="meta">@RequiresPermissions</span>(TOONEKEYEXPORTEXCEL_URL + <span class="string">"1"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">TooneKeyExportExcel1</span><span class="params">(Model m)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 查当前用户拥有的台账</span></span><br><span class="line">        Map&lt;String, Object&gt; paramsOld = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        paramsOld.put(<span class="string">" user.id = "</span>, userService.getUser(<span class="keyword">null</span>).getId());</span><br><span class="line">        paramsOld.put(<span class="string">" ledger.submitUser.department.level = "</span>, <span class="number">0</span>);</span><br><span class="line">        List&lt;LedgerPermission&gt; find4Params = ledgerPermissionService.find4Params(paramsOld,</span><br><span class="line">                <span class="string">" order by ledger.name asc"</span>);</span><br><span class="line">        m.addAttribute(<span class="string">"list"</span>, find4Params);</span><br><span class="line">        Date[] monthDate = ToolDate.monthDate(<span class="keyword">new</span> Date());</span><br><span class="line">        String startTime = (monthDate[<span class="number">0</span>].getYear() + <span class="number">1900</span>) + <span class="string">"-"</span> + (monthDate[<span class="number">0</span>].getMonth() + <span class="number">1</span>);</span><br><span class="line">        m.addAttribute(<span class="string">"startTime"</span>, startTime);</span><br><span class="line">        String endTime = (monthDate[<span class="number">0</span>].getYear() + <span class="number">1900</span>) + <span class="string">"-"</span> + (monthDate[<span class="number">0</span>].getMonth() + <span class="number">1</span>);</span><br><span class="line">        m.addAttribute(<span class="string">"endTime"</span>, endTime);</span><br><span class="line">        <span class="keyword">return</span> TOONEKEYEXPORTEXCEL_URL;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h1 id="前台页面"><a href="#前台页面" class="headerlink" title="前台页面"></a>前台页面</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">用的是jsp</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"selectall()"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary radius size-S"</span>&gt;</span>全选<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"noselectall()"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary radius size-S"</span>&gt;</span>全不选<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary radius size-S"</span> <span class="attr">value</span>=<span class="string">"导出"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;list &#125;"</span> <span class="attr">var</span>=<span class="string">"obj"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"ids"</span> <span class="attr">class</span>=<span class="string">"checkboxs"</span> <span class="attr">id</span>=<span class="string">"$&#123;obj.id &#125;"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">value</span>=<span class="string">"$&#123;obj.ledger.id &#125;"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"$&#123;obj.id &#125;"</span>&gt;</span>$&#123;obj.ledger.name &#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br></pre></td></tr></table></figure><p>全选与全不选js代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectall</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">".checkboxs"</span>).prop(<span class="string">"checked"</span>,<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noselectall</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">".checkboxs"</span>).prop(<span class="string">"checked"</span>,<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="具体一键导出Excel实现代码"><a href="#具体一键导出Excel实现代码" class="headerlink" title="具体一键导出Excel实现代码"></a>具体一键导出Excel实现代码</h1><p>这里看的是将文件全部压缩到一个文件夹下面。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 台账一键导出</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ids</span></span><br><span class="line"><span class="comment">     *            需要导出的台账的id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> startTime</span></span><br><span class="line"><span class="comment">     *            开始时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> endTime</span></span><br><span class="line"><span class="comment">     *            结束时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> state</span></span><br><span class="line"><span class="comment">     *            审核状态</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(ONEKEYEXPORTEXCEL_URL)</span><br><span class="line">    <span class="meta">@RequiresPermissions</span>(ONEKEYEXPORTEXCEL_URL)</span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;<span class="keyword">byte</span>[]&gt; oneKeyExportExcel(String ids, String startTime, String endTime, String state) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ToolStr.isEmpty(ids)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MsgException(<span class="string">"至少选择一个台账"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 先创建一个临时文件夹,用来存放excel</span></span><br><span class="line">        String fileName = userService.getUser(<span class="keyword">null</span>).getUsername() + <span class="keyword">new</span> Date().getTime();</span><br><span class="line">        String path2 = ContextLoader.getCurrentWebApplicationContext().getServletContext().getRealPath(<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">int</span> lastIndexOf = path2.lastIndexOf(<span class="string">"\\"</span>);</span><br><span class="line">        String substring = path2.substring(<span class="number">0</span>, lastIndexOf);</span><br><span class="line">        <span class="keyword">int</span> lastIndexOf2 = substring.lastIndexOf(<span class="string">"\\"</span>);</span><br><span class="line">        path2 = substring.substring(<span class="number">0</span>, lastIndexOf2 + <span class="number">1</span>);</span><br><span class="line">        String path3 = <span class="string">"zipfile"</span>;</span><br><span class="line">        path2 += <span class="string">"zipexcelfile/"</span> + fileName;</span><br><span class="line">        File dir = <span class="keyword">new</span> File(path2);</span><br><span class="line">        File dir2 = <span class="keyword">new</span> File(path3);</span><br><span class="line">        <span class="keyword">if</span> (!dir.exists()) &#123;</span><br><span class="line">            dir.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!dir2.exists()) &#123;</span><br><span class="line">            dir2.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 再创建一个临时文件夹用来存zip</span></span><br><span class="line"></span><br><span class="line">        String[] split = ids.split(<span class="string">","</span>);</span><br><span class="line">        <span class="keyword">for</span> (String string : split) &#123;</span><br><span class="line">            <span class="comment">// 得到台账</span></span><br><span class="line">            Ledger ledger = ledgerService.get(ToolStr.sToL(string, <span class="number">0</span>));</span><br><span class="line">            <span class="keyword">if</span> (!ToolStr.isEmpty(ledger)) &#123;</span><br><span class="line">                <span class="comment">// 得到没被删除的台账详情</span></span><br><span class="line">                List&lt;LedgerInfo&gt; ledgerInfoList = ledger.getLedgerInfoList();</span><br><span class="line">                List&lt;LedgerInfo&gt; collect = ledgerInfoList.stream()</span><br><span class="line">                        .filter((LedgerInfo l) -&gt; l.getState().equals(LedgerInfo.NORMAL)).collect(Collectors.toList());</span><br><span class="line">                <span class="comment">// 查询台账的上报记录</span></span><br><span class="line">                <span class="comment">// 审核员和非审核员查询到的内容不同</span></span><br><span class="line">                List&lt;LedgerRecords&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                String checkPermission = ledgerCheckPermissionService.checkPermission(ledger.getId());</span><br><span class="line">                <span class="keyword">if</span> (!ToolStr.isEmpty(checkPermission)) &#123;</span><br><span class="line">                    list = ledgerRecordsService.findLedgerRecords4LedgerIdExport(ledger.getId(), startTime, endTime,</span><br><span class="line">                            state);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    list = ledgerRecordsService.findLedgerRecords4LedgerIdAndUserDeptExport(ledger.getId(), startTime,</span><br><span class="line">                            endTime, state);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 新建excel</span></span><br><span class="line">                HSSFWorkbook excel = <span class="keyword">new</span> HSSFWorkbook();</span><br><span class="line">                HSSFSheet createSheet = excel.createSheet();</span><br><span class="line">                <span class="comment">// 设置列宽 序号,上报单位,上报时间</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= collect.size() + <span class="number">2</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                        createSheet.setColumnWidth(i, <span class="number">20</span> * <span class="number">100</span>);<span class="comment">// 宽度</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == collect.size() + <span class="number">2</span>) &#123;</span><br><span class="line">                        createSheet.setColumnWidth(i, <span class="number">20</span> * <span class="number">200</span>);<span class="comment">// 宽度</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        createSheet.setColumnWidth(i, <span class="number">20</span> * <span class="number">400</span>);<span class="comment">// 宽度</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 标题</span></span><br><span class="line">                HSSFCellStyle style1 = excel.createCellStyle();</span><br><span class="line">                style1.setWrapText(<span class="keyword">true</span>);</span><br><span class="line">                HSSFFont font = excel.createFont();</span><br><span class="line">                font.setFontName(<span class="string">"黑体"</span>);</span><br><span class="line">                font.setFontHeightInPoints(Short.parseShort(<span class="string">"16"</span>));<span class="comment">// 设置字体大小</span></span><br><span class="line">                style1.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);</span><br><span class="line">                style1.setAlignment(HSSFCellStyle.ALIGN_CENTER);</span><br><span class="line">                style1.setFont(font);</span><br><span class="line">                <span class="comment">// 表头样式</span></span><br><span class="line">                CellStyle headerStyle = excel.createCellStyle();</span><br><span class="line">                headerStyle.setWrapText(<span class="keyword">true</span>);</span><br><span class="line">                headerStyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);</span><br><span class="line">                headerStyle.setAlignment(HSSFCellStyle.ALIGN_CENTER);</span><br><span class="line">                Font headerFont = excel.createFont();</span><br><span class="line">                headerFont.setFontHeightInPoints((<span class="keyword">short</span>) <span class="number">11</span>);</span><br><span class="line">                headerFont.setFontName(<span class="string">"宋体"</span>);</span><br><span class="line">                headerStyle.setFont(headerFont);</span><br><span class="line">                <span class="comment">// 普通单元格样式</span></span><br><span class="line">                CellStyle cellStyle = excel.createCellStyle();</span><br><span class="line">                cellStyle.setWrapText(<span class="keyword">true</span>);</span><br><span class="line">                cellStyle.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);</span><br><span class="line">                Font cellFont = excel.createFont();</span><br><span class="line">                cellFont.setFontName(<span class="string">"宋体"</span>);</span><br><span class="line">                cellStyle.setFont(cellFont);</span><br><span class="line">                <span class="comment">// 创建第一行</span></span><br><span class="line">                HSSFRow createRow3 = createSheet.createRow(<span class="number">0</span>);</span><br><span class="line">                createRow3.setHeight((<span class="keyword">short</span>) (<span class="number">25</span> * <span class="number">20</span>));</span><br><span class="line">                <span class="comment">// 根据cols.size()进行合并</span></span><br><span class="line">                CellRangeAddress cra = <span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, collect.size() + <span class="number">2</span>);<span class="comment">// 合并单元格</span></span><br><span class="line">                createSheet.addMergedRegion(cra);</span><br><span class="line">                HSSFCell titleCell = createRow3.createCell(<span class="number">0</span>);</span><br><span class="line">                titleCell.setCellValue(ledger.getName());<span class="comment">// 表的标题</span></span><br><span class="line">                titleCell.setCellStyle(style1);</span><br><span class="line">                <span class="comment">// 表头</span></span><br><span class="line">                <span class="comment">// 创建表头</span></span><br><span class="line">                <span class="comment">// 创建第二行</span></span><br><span class="line">                HSSFRow createRow2 = createSheet.createRow(<span class="number">1</span>);</span><br><span class="line">                createRow2.setHeight((<span class="keyword">short</span>) (<span class="number">15</span> * <span class="number">20</span>));</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= collect.size() + <span class="number">2</span>; j++) &#123;</span><br><span class="line">                    HSSFCell createCell = createRow2.createCell(j);</span><br><span class="line">                    <span class="keyword">if</span> (j == <span class="number">0</span>) &#123;</span><br><span class="line">                        createCell.setCellValue(<span class="string">"序号"</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">1</span>) &#123;</span><br><span class="line">                        createCell.setCellValue(<span class="string">"上报单位"</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == collect.size() + <span class="number">2</span>) &#123;</span><br><span class="line">                        createCell.setCellValue(<span class="string">"上报时间"</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        createCell.setCellValue(collect.get(j - <span class="number">2</span>).getName());</span><br><span class="line">                    &#125;</span><br><span class="line">                    createCell.setCellStyle(headerStyle);</span><br><span class="line">                    createCell.setCellType(HSSFCell.CELL_TYPE_STRING);<span class="comment">// 变成文本型</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">2</span>;</span><br><span class="line">                <span class="comment">// 内容</span></span><br><span class="line">                <span class="keyword">for</span> (LedgerRecords ledgerRecords : list) &#123;</span><br><span class="line">                    <span class="comment">// 创建一行</span></span><br><span class="line">                    HSSFRow createRow = createSheet.createRow(i++);</span><br><span class="line">                    List&lt;LedgerInfoRecords&gt; ledgerInfoRecords = ledgerRecords.getLedgerInfoRecords();</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= collect.size() + <span class="number">2</span>; j++) &#123;</span><br><span class="line">                        HSSFCell createCell = createRow.createCell(j);</span><br><span class="line">                        <span class="keyword">if</span> (j == <span class="number">0</span>) &#123;</span><br><span class="line">                            createCell.setCellValue(i - <span class="number">2</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">1</span>) &#123;</span><br><span class="line">                            createCell.setCellValue(ledgerRecords.getSubmitUser().getDepartment().getName());</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == collect.size() + <span class="number">2</span>) &#123;</span><br><span class="line">                            createCell.setCellValue(</span><br><span class="line">                                    ToolDate.formatTime(ledgerRecords.getCreateTime(), <span class="string">"yyyy年MM月dd日"</span>, <span class="string">""</span>));</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            LedgerInfo ledgerInfo = collect.get(j - <span class="number">2</span>);</span><br><span class="line">                            <span class="keyword">for</span> (LedgerInfoRecords ledgerInfoRecords2 : ledgerInfoRecords) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (ledgerInfo.getId().equals(ledgerInfoRecords2.getLedgerInfo().getId())) &#123;</span><br><span class="line">                                    createCell.setCellValue(ledgerInfoRecords2.getContent());</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        createCell.setCellStyle(cellStyle);</span><br><span class="line">                        createCell.setCellType(HSSFCell.CELL_TYPE_STRING);<span class="comment">// 变成文本型</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 都保存到一个临时文件夹</span></span><br><span class="line">                FileOutputStream fout;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fout = <span class="keyword">new</span> FileOutputStream(path2 + <span class="string">"/"</span> + ledger.getName() + <span class="string">".xls"</span>);</span><br><span class="line">                    excel.write(fout);</span><br><span class="line">                    fout.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                    <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 压缩文件夹</span></span><br><span class="line">        FileOutputStream fos1;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fos1 = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(path3 + <span class="string">"/"</span> + fileName + <span class="string">".zip"</span>));</span><br><span class="line">            FileUtil.toZip(path2, fos1, <span class="keyword">true</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        File f = <span class="keyword">new</span> File(path3 + <span class="string">"/"</span> + fileName + <span class="string">".zip"</span>);</span><br><span class="line">        <span class="comment">// 下载</span></span><br><span class="line">        HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            headers.setContentDispositionFormData(<span class="string">"attachment"</span>, java.net.URLEncoder.encode(<span class="string">"监测台账"</span>, <span class="string">"UTF-8"</span>) + <span class="string">".zip"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e1) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            headers.setContentDispositionFormData(<span class="string">"attachment"</span>, <span class="string">"download"</span> + <span class="string">".zip"</span>);</span><br><span class="line">            e1.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;<span class="keyword">byte</span>[]&gt;(FileUtils.readFileToByteArray(f), headers, HttpStatus.CREATED);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>具体的FileUtil<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BUFFER_SIZE = <span class="number">2</span> * <span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 压缩成ZIP 方法1</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> srcDir</span></span><br><span class="line"><span class="comment">     *            压缩文件夹路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> out</span></span><br><span class="line"><span class="comment">     *            压缩文件输出流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> KeepDirStructure</span></span><br><span class="line"><span class="comment">     *            是否保留原来的目录结构,true:保留目录结构;</span></span><br><span class="line"><span class="comment">     *            false:所有文件跑到压缩包根目录下(注意：不保留目录结构可能会出现同名文件,会压缩失败)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RuntimeException</span></span><br><span class="line"><span class="comment">     *             压缩失败会抛出运行时异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">toZip</span><span class="params">(String srcDir, OutputStream out, <span class="keyword">boolean</span> KeepDirStructure)</span> <span class="keyword">throws</span> RuntimeException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        ZipOutputStream zos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            zos = <span class="keyword">new</span> ZipOutputStream(out);</span><br><span class="line">            File sourceFile = <span class="keyword">new</span> File(srcDir);</span><br><span class="line">            compress(sourceFile, zos, sourceFile.getName(), KeepDirStructure);</span><br><span class="line">            <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">            System.out.println(<span class="string">"压缩完成，耗时："</span> + (end - start) + <span class="string">" ms"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"zip error from ZipUtils"</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (zos != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    zos.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归压缩方法</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sourceFile</span></span><br><span class="line"><span class="comment">     *            源文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> zos</span></span><br><span class="line"><span class="comment">     *            zip输出流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     *            压缩后的名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> KeepDirStructure</span></span><br><span class="line"><span class="comment">     *            是否保留原来的目录结构,true:保留目录结构;</span></span><br><span class="line"><span class="comment">     *            false:所有文件跑到压缩包根目录下(注意：不保留目录结构可能会出现同名文件,会压缩失败)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compress</span><span class="params">(File sourceFile, ZipOutputStream zos, String name, <span class="keyword">boolean</span> KeepDirStructure)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        zos.setEncoding(<span class="string">"gbk"</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[BUFFER_SIZE];</span><br><span class="line">        <span class="keyword">if</span> (sourceFile.isFile()) &#123;</span><br><span class="line">            <span class="comment">// 向zip输出流中添加一个zip实体，构造器中name为zip实体的文件的名字</span></span><br><span class="line">            zos.putNextEntry(<span class="keyword">new</span> ZipEntry(name));</span><br><span class="line">            <span class="comment">// copy文件到zip输出流中</span></span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            FileInputStream in = <span class="keyword">new</span> FileInputStream(sourceFile);</span><br><span class="line">            <span class="keyword">while</span> ((len = in.read(buf)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                zos.write(buf, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// Complete the entry</span></span><br><span class="line">            zos.closeEntry();</span><br><span class="line">            in.close();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            File[] listFiles = sourceFile.listFiles();</span><br><span class="line">            <span class="keyword">if</span> (listFiles == <span class="keyword">null</span> || listFiles.length == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 需要保留原来的文件结构时,需要对空文件夹进行处理</span></span><br><span class="line">                <span class="keyword">if</span> (KeepDirStructure) &#123;</span><br><span class="line">                    <span class="comment">// 空文件夹的处理</span></span><br><span class="line">                    zos.putNextEntry(<span class="keyword">new</span> ZipEntry(name + <span class="string">"/"</span>));</span><br><span class="line">                    <span class="comment">// 没有文件，不需要文件的copy</span></span><br><span class="line">                    zos.closeEntry();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (File file : listFiles) &#123;</span><br><span class="line">                    <span class="comment">// 判断是否需要保留原来的文件结构</span></span><br><span class="line">                    <span class="keyword">if</span> (KeepDirStructure) &#123;</span><br><span class="line">                        <span class="comment">// 注意：file.getName()前面需要带上父文件夹的名字加一斜杠,</span></span><br><span class="line">                        <span class="comment">// 不然最后压缩包中就不能保留原来的文件结构,即：所有文件都跑到压缩包根目录下了</span></span><br><span class="line">                        compress(file, zos, name + <span class="string">"/"</span> + file.getName(), KeepDirStructure);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        compress(file, zos, file.getName(), KeepDirStructure);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copy</span><span class="params">(String path1, String path2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileInputStream input = <span class="keyword">new</span> FileInputStream(path1);<span class="comment">// 可替换为任何路径何和文件名</span></span><br><span class="line">            FileOutputStream output = <span class="keyword">new</span> FileOutputStream(path2);<span class="comment">// 可替换为任何路径何和文件名</span></span><br><span class="line">            <span class="keyword">int</span> in = input.read();</span><br><span class="line">            <span class="keyword">while</span> (in != -<span class="number">1</span>) &#123;</span><br><span class="line">                output.write(in);</span><br><span class="line">                in = input.read();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.println(e.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里主要是看大神代码，主要实现了，将所有要导出的信息，可以一键导出，并将文件压缩在文件夹中。&lt;br&gt;
    
    </summary>
    
    
      <category term="日常总结" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>导出Excel(可选择)—2018-08-09</title>
    <link href="http://yoursite.com/2018/08/09/%E5%AF%BC%E5%87%BAExcel-%E5%8F%AF%E9%80%89%E6%8B%A9-%E2%80%942018-08-09/"/>
    <id>http://yoursite.com/2018/08/09/导出Excel-可选择-—2018-08-09/</id>
    <published>2018-08-09T01:53:06.000Z</published>
    <updated>2018-08-29T14:24:33.201Z</updated>
    
    <content type="html"><![CDATA[<p>实现导出Excel可以进行选择具体某几列进行导出，这里是用别人的代码，觉得比较高端，所以记录一下，以便自己学习。<br><a id="more"></a></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>导入导出Excel需要的jar包，这里用的是Maven工程，只需要引入相应的坐标即可。<br>POM文件<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">   &lt;version&gt;3.15&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-scratchpad&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.17&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><h1 id="前台实现"><a href="#前台实现" class="headerlink" title="前台实现"></a>前台实现</h1><p>用的是jsp，前台框架用的H-UI,一开始需要将显示弹框的内容进行隐藏，用layer.open就可以实现弹框。<br>效果如下，没有美化：</p><p><img src="/images/daochuExcel.png" alt="导出Excel弹窗"><br>具体实现代码:这里是导出的按钮<br><img src="/images/daochu.png" alt="导出按钮"><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"float:right"</span> <span class="attr">class</span>=<span class="string">"btn btn-secondary radius"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">onclick</span>=<span class="string">"daochuexcel4ledgerid()"</span>&gt;</span>导出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>隐藏的弹出框的内容<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>  <span class="attr">id</span>=<span class="string">"exportexceldiv"</span> <span class="attr">hidden</span>=<span class="string">"true"</span> <span class="attr">style</span>=<span class="string">"width: 95%;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"$&#123;ctx &#125;$&#123;exportexcel&#125;"</span> <span class="attr">id</span>=<span class="string">"exportexcelform"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"reportTime"</span> <span class="attr">value</span>=<span class="string">"$&#123;reportTime &#125;"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"deadTime"</span> <span class="attr">value</span>=<span class="string">"$&#123;deadTime &#125;"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"state"</span> <span class="attr">value</span>=<span class="string">"$&#123;param.state &#125;"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"additionFirstId"</span> <span class="attr">value</span>=<span class="string">"$&#123;additionFirstId &#125;"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"pagerowTotal"</span> <span class="attr">value</span>=<span class="string">"$&#123;page.rowTotal &#125;"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"departmentId"</span> <span class="attr">value</span>=<span class="string">"$&#123;departmentId &#125;"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row cl"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-label col-xs-4 col-sm-3"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">class</span>=<span class="string">"c-red"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>请选择导出列：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"formControls col-xs-8 col-sm-9"</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"xuhao"</span> <span class="attr">name</span>=<span class="string">"col"</span> <span class="attr">id</span>=<span class="string">"colxuhao"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"colxuhao"</span>&gt;</span>序号<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"mingcheng"</span> <span class="attr">name</span>=<span class="string">"col"</span> <span class="attr">id</span>=<span class="string">"collmingcheng"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"collmingcheng"</span>&gt;</span>部门名称<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">&lt;!-- 这里写上用户自定义的哪一些 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"ledgerinfocheckbox"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"shijian"</span> <span class="attr">name</span>=<span class="string">"col"</span> <span class="attr">id</span>=<span class="string">"colshijian"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"colshijian"</span>&gt;</span>上报时间<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"zhuangtai"</span> <span class="attr">name</span>=<span class="string">"col"</span> <span class="attr">id</span>=<span class="string">"colzhuangtai"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"colzhuangtai"</span>&gt;</span>状态<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row cl"</span> <span class="attr">style</span>=<span class="string">"padding-top: 15px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4 col-sm-offset-5"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary radius"</span> <span class="attr">value</span>=<span class="string">"导出"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>daochuexcel4ledgerid实现方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="comment">//这是导出某一台账的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">daochuexcel4ledgerid</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//先清空多选框</span></span><br><span class="line">        $(<span class="string">"#ledgerinfocheckbox"</span>).html(<span class="string">""</span>);</span><br><span class="line">        <span class="comment">//获得到当前台账的id和搜索条件</span></span><br><span class="line">        <span class="comment">//展示loading框</span></span><br><span class="line">        <span class="keyword">var</span> layermsgindex = layer.msg(<span class="string">'加载中'</span>, &#123;</span><br><span class="line">            icon: <span class="number">16</span>,</span><br><span class="line">            shade: <span class="number">0.01</span>,</span><br><span class="line">            time:<span class="number">0</span></span><br><span class="line">        &#125;);</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url : <span class="string">"$&#123;ctx &#125;$&#123;beforeexportexcel&#125;"</span>,</span><br><span class="line">            data : &#123;</span><br><span class="line">                <span class="string">"additionFirstId"</span>:<span class="string">'$&#123;additionFirstId&#125;'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            dataType : <span class="string">"json"</span>,</span><br><span class="line">            type: <span class="string">"post"</span>,</span><br><span class="line">            <span class="keyword">async</span>:<span class="literal">true</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> jsonobj = <span class="built_in">eval</span>(result);</span><br><span class="line">                <span class="keyword">var</span> htmlcont = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">if</span> (result.length != <span class="number">0</span> || result != <span class="literal">null</span> || result !=<span class="string">''</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> jsonobj)&#123;</span><br><span class="line">                        <span class="comment">//追加多选框</span></span><br><span class="line">                        htmlcont += <span class="string">' &lt;input type="checkbox" value="'</span>+ jsonobj[i].id +<span class="string">'" name="col" id="col'</span>+ jsonobj[i].id +<span class="string">'"&gt;&lt;label for="col'</span>+ jsonobj[i].id +<span class="string">'"&gt;'</span>+ jsonobj[i].secondName +<span class="string">'&lt;/label&gt;&lt;br&gt; '</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                $(<span class="string">"#ledgerinfocheckbox"</span>).html(htmlcont);</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> (<span class="params">xhr, status, error</span>) </span>&#123;</span><br><span class="line">                layer.closeAll();</span><br><span class="line">                layer.msg(<span class="string">'加载失败，请重试。'</span>, &#123;<span class="attr">icon</span>: <span class="number">5</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        layer.closeAll();</span><br><span class="line">        <span class="comment">//弹出提示框选择列数</span></span><br><span class="line">        layer.open(&#123;</span><br><span class="line">            type: <span class="number">1</span>,</span><br><span class="line">            title: <span class="string">"导出列表"</span>,</span><br><span class="line">            skin: <span class="string">'layui-layer-rim'</span>, <span class="comment">//加上边框</span></span><br><span class="line">            area: [<span class="string">'800px'</span>, <span class="string">'600px'</span>], <span class="comment">//宽高</span></span><br><span class="line">            content: $(<span class="string">"#exportexceldiv"</span>)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="后台实现"><a href="#后台实现" class="headerlink" title="后台实现"></a>后台实现</h1><p>查询出来具体需要导出的Excel列表数据<br>这里用框架的方法，可以自己实现查询<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加分项导出Excel前查询上报项</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(BEFORE_EXPORT_EXCEL_URL)</span><br><span class="line">    <span class="meta">@RequiresPermissions</span>(BEFORE_EXPORT_EXCEL_URL)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">beforeExportExcel</span><span class="params">(String additionFirstId)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        params.put(<span class="string">" additionFirstConfig.id = "</span>, ToolStr.sToL(additionFirstId, <span class="number">0</span>));</span><br><span class="line">        params.put(<span class="string">" state = "</span>, <span class="number">1</span>);</span><br><span class="line">        params.put(<span class="string">" deleteState = "</span>, <span class="number">1</span>);</span><br><span class="line">        List&lt;AdditionSecondConfig&gt; additionSecondConfigList = additionSecondConfigService.find4Params(params, <span class="string">" order by sort,id asc"</span>);</span><br><span class="line">        String jsonString = JSONObject.toJSONString(additionSecondConfigList);</span><br><span class="line">        <span class="keyword">return</span> jsonString;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h1 id="导出Excel"><a href="#导出Excel" class="headerlink" title="导出Excel"></a>导出Excel</h1><p>  点击弹出框中的导出可以进行导出，执行form表单中的方法，具体后台实现代码如下：<br>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> response        响应</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> additionFirstId 一级菜单id</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> pagerowTotal    总记录数</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> col             列选择的每一列</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> type            类型</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> reportTime      上报时间 搜索条件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> deadTime        结束时间 搜索条件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> state           状态 搜索条件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> departmentId    部门id</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@RequestMapping</span>(EXPORT_EXCEL_URL)</span><br><span class="line">  <span class="meta">@RequiresPermissions</span>(EXPORT_EXCEL_URL)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">exportExcel</span><span class="params">(HttpServletResponse response, String additionFirstId, String pagerowTotal,</span></span></span><br><span class="line"><span class="function"><span class="params">                            String col, String type, String reportTime, String deadTime, String state,</span></span></span><br><span class="line"><span class="function"><span class="params">                            String departmentId)</span> </span>&#123;</span><br><span class="line">      Page page = <span class="keyword">new</span> Page();</span><br><span class="line">      page.setCurentPage(<span class="number">1</span>);</span><br><span class="line">      <span class="comment">// 这个根据具体的数量再定</span></span><br><span class="line">      page.setPageSize(ToolStr.sToI(pagerowTotal, <span class="number">0</span>));</span><br><span class="line">      Map&lt;String, Object&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">      <span class="comment">// 先查看导出哪一类台账</span></span><br><span class="line">      String additionTitle = <span class="string">"加分项列表"</span>;</span><br><span class="line">      <span class="comment">// 先查看有无ledgerId</span></span><br><span class="line">      List&lt;ReportAddition&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">      <span class="comment">// 获取当前年月</span></span><br><span class="line">      Calendar cal = Calendar.getInstance();</span><br><span class="line">      <span class="keyword">int</span> year = cal.get(Calendar.YEAR);</span><br><span class="line">      <span class="keyword">int</span> month = cal.get(Calendar.MONTH) + <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span> (!ToolStr.isEmpty(additionFirstId)) &#123;</span><br><span class="line">          AdditionFirstConfig additionFirstConfig = additionFirstConfigService.get(ToolStr.sToL(additionFirstId, <span class="number">0</span>));</span><br><span class="line">          <span class="comment">// 获取一级菜单名称</span></span><br><span class="line">          params.clear();</span><br><span class="line">          additionTitle = additionFirstConfig.getFirstName();</span><br><span class="line">          <span class="comment">// 判断是否有部门id</span></span><br><span class="line">          <span class="keyword">if</span> (!ToolStr.isEmpty(departmentId)) &#123;</span><br><span class="line">              params.put(<span class="string">" department.id = "</span>, ToolStr.sToL(departmentId, <span class="number">0</span>));</span><br><span class="line">          &#125;</span><br><span class="line">          params.put(<span class="string">" additionFirstConfig.id = "</span>, ToolStr.sToL(additionFirstId, <span class="number">0</span>));</span><br><span class="line">          <span class="keyword">if</span> (!ToolStr.isEmpty(state)) &#123;</span><br><span class="line">              params.put(<span class="string">" state = "</span>, ToolStr.sToI(state));</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (!ToolStr.isEmpty(reportTime)) &#123;</span><br><span class="line">              reportTime += <span class="string">"-01 00:00:00"</span>;</span><br><span class="line">              params.put(<span class="string">" reportTime &gt;= "</span>, ToolDate.parseTime(reportTime, <span class="keyword">null</span>));</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 判断截止日期是否存在</span></span><br><span class="line">          <span class="keyword">if</span> (!ToolStr.isEmpty(deadTime)) &#123;</span><br><span class="line">              Date[] monthDate = ToolDate.monthDate(<span class="keyword">new</span> Date());</span><br><span class="line">              deadTime = deadTime + <span class="string">"-"</span> + (monthDate[<span class="number">1</span>].getDate()) + <span class="string">" 23:59:59"</span>;</span><br><span class="line">              params.put(<span class="string">" reportTime &lt;= "</span>, ToolDate.parseTime(deadTime, <span class="keyword">null</span>));</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 查询上报列表</span></span><br><span class="line">          list = reportAdditionService.find4Page(<span class="keyword">null</span>, params, <span class="string">" order by reportTime desc"</span>);</span><br><span class="line"></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">      List&lt;String&gt; cols = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">      <span class="keyword">if</span> (!ToolStr.isEmpty(col)) &#123;</span><br><span class="line">          String[] colsplit = col.split(<span class="string">","</span>);</span><br><span class="line">          len += colsplit.length;</span><br><span class="line">          <span class="keyword">for</span> (String string : colsplit) &#123;</span><br><span class="line">              cols.add(string);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// if (!ToolStr.isEmpty(colids)) &#123;</span></span><br><span class="line">      <span class="comment">// String[] colidssplit = colids.split(",");</span></span><br><span class="line">      <span class="comment">// len += colidssplit.length;</span></span><br><span class="line">      <span class="comment">// for (String string : colidssplit) &#123;</span></span><br><span class="line">      <span class="comment">// cols.add(string);</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      XSSFWorkbook excel = <span class="keyword">new</span> XSSFWorkbook();</span><br><span class="line">      XSSFSheet createSheet = excel.createSheet();</span><br><span class="line">      <span class="comment">// 根据col的长度设置列宽</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cols.size(); i++) &#123;</span><br><span class="line">          <span class="keyword">if</span> ((<span class="string">"xuhao"</span>).equals(cols.get(i)) || (<span class="string">"zhuangtai"</span>).equals(cols.get(i))) &#123;</span><br><span class="line">              <span class="comment">// 宽度</span></span><br><span class="line">              createSheet.setColumnWidth(i, <span class="number">20</span> * <span class="number">100</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((<span class="string">"mingcheng"</span>).equals(cols.get(i)) || (<span class="string">"shijian"</span>).equals(cols.get(i))) &#123;</span><br><span class="line">              <span class="comment">// 宽度</span></span><br><span class="line">              createSheet.setColumnWidth(i, <span class="number">20</span> * <span class="number">200</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="comment">// 宽度</span></span><br><span class="line">              createSheet.setColumnWidth(i, <span class="number">20</span> * <span class="number">400</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      XSSFCellStyle style1 = excel.createCellStyle();</span><br><span class="line">      style1.setWrapText(<span class="keyword">true</span>);</span><br><span class="line">      XSSFFont font = excel.createFont();</span><br><span class="line">      font.setFontName(<span class="string">"黑体"</span>);</span><br><span class="line">      <span class="comment">// 设置字体大小</span></span><br><span class="line">      font.setFontHeightInPoints(Short.parseShort(<span class="string">"16"</span>));</span><br><span class="line">      style1.setVerticalAlignment(XSSFCellStyle.VERTICAL_CENTER);</span><br><span class="line">      style1.setAlignment(XSSFCellStyle.ALIGN_CENTER);</span><br><span class="line">      style1.setFont(font);</span><br><span class="line">      <span class="comment">// 表头样式</span></span><br><span class="line">      CellStyle headerStyle = excel.createCellStyle();</span><br><span class="line">      headerStyle.setWrapText(<span class="keyword">true</span>);</span><br><span class="line">      headerStyle.setVerticalAlignment(XSSFCellStyle.VERTICAL_CENTER);</span><br><span class="line">      headerStyle.setAlignment(XSSFCellStyle.ALIGN_CENTER);</span><br><span class="line">      Font headerFont = excel.createFont();</span><br><span class="line">      headerFont.setFontHeightInPoints((<span class="keyword">short</span>) <span class="number">11</span>);</span><br><span class="line">      headerFont.setFontName(<span class="string">"宋体"</span>);</span><br><span class="line">      headerStyle.setFont(headerFont);</span><br><span class="line">      <span class="comment">// 普通单元格样式</span></span><br><span class="line">      CellStyle cellStyle = excel.createCellStyle();</span><br><span class="line">      cellStyle.setWrapText(<span class="keyword">true</span>);</span><br><span class="line">      cellStyle.setVerticalAlignment(XSSFCellStyle.VERTICAL_CENTER);</span><br><span class="line">      Font cellFont = excel.createFont();</span><br><span class="line">      cellFont.setFontName(<span class="string">"宋体"</span>);</span><br><span class="line">      cellStyle.setFont(cellFont);</span><br><span class="line">      <span class="comment">// 创建第一行</span></span><br><span class="line">      XSSFRow createRow3 = createSheet.createRow(<span class="number">0</span>);</span><br><span class="line">      createRow3.setHeight((<span class="keyword">short</span>) (<span class="number">25</span> * <span class="number">20</span>));</span><br><span class="line">      <span class="comment">// 根据cols.size()进行合并</span></span><br><span class="line">      CellRangeAddress cra = <span class="keyword">new</span> CellRangeAddress(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, cols.size() - <span class="number">1</span>);<span class="comment">// 合并单元格</span></span><br><span class="line">      createSheet.addMergedRegion(cra);</span><br><span class="line">      XSSFCell titleCell = createRow3.createCell(<span class="number">0</span>);</span><br><span class="line">      <span class="comment">// 表的标题</span></span><br><span class="line">      titleCell.setCellValue(additionTitle);</span><br><span class="line">      titleCell.setCellStyle(style1);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 创建第二行</span></span><br><span class="line">      XSSFRow createRow2 = createSheet.createRow(<span class="number">1</span>);</span><br><span class="line">      createRow2.setHeight((<span class="keyword">short</span>) (<span class="number">15</span> * <span class="number">20</span>));</span><br><span class="line">      <span class="comment">// 创建表头</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cols.size(); j++) &#123;</span><br><span class="line">          XSSFCell createCell = createRow2.createCell(j);</span><br><span class="line">          <span class="keyword">if</span> ((<span class="string">"xuhao"</span>.equals(cols.get(j)))) &#123;</span><br><span class="line">              createCell.setCellValue(<span class="string">"序号"</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> ((<span class="string">"mingcheng"</span>).equals(cols.get(j))) &#123;</span><br><span class="line">              createCell.setCellValue(<span class="string">"部门名称"</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (!(<span class="string">"zhuangtai"</span>).equals(cols.get(j)) &amp;&amp; !(<span class="string">"shijian"</span>).equals(cols.get(j))) &#123;</span><br><span class="line">              <span class="comment">// 拿着id去取</span></span><br><span class="line">              AdditionSecondConfig additionSecondConfig = additionSecondConfigService.get(ToolStr.sToL(cols.get(j), <span class="number">0</span>));</span><br><span class="line">              <span class="keyword">if</span> (additionSecondConfig != <span class="keyword">null</span>) &#123;</span><br><span class="line">                  createCell.setCellValue(additionSecondConfig.getSecondName());</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> ((<span class="string">"shijian"</span>).equals(cols.get(j))) &#123;</span><br><span class="line">              createCell.setCellValue(<span class="string">"上报时间"</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> ((<span class="string">"zhuangtai"</span>).equals(cols.get(j))) &#123;</span><br><span class="line">              createCell.setCellValue(<span class="string">"状态"</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          createCell.setCellStyle(headerStyle);</span><br><span class="line">          createCell.setCellType(XSSFCell.CELL_TYPE_STRING);<span class="comment">// 变成文本型</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">int</span> i = <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">for</span> (ReportAddition reportAddition : list) &#123;</span><br><span class="line">          List&lt;String&gt; cols2 = cols;</span><br><span class="line">          <span class="comment">// 创建一行</span></span><br><span class="line">          XSSFRow createRow = createSheet.createRow(i++);</span><br><span class="line">          <span class="comment">// createRow.setHeight((short) (15 * 20)); 行高不要了，加上会把默认换行抵消掉</span></span><br><span class="line">          <span class="comment">// 获取上报详情</span></span><br><span class="line">          List&lt;ReportAdditionDetail&gt; reportAdditionDetailList = reportAddition.getReportAdditionDetailList();</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cols2.size(); j++) &#123;</span><br><span class="line">              XSSFCell createCell = createRow.createCell(j);</span><br><span class="line">              <span class="keyword">if</span> ((<span class="string">"xuhao"</span>).equals(cols.get(j).toString())) &#123;</span><br><span class="line">                  String s = String.valueOf(i - <span class="number">2</span>);</span><br><span class="line">                  createCell.setCellValue(s);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> ((<span class="string">"mingcheng"</span>.equals(cols.get(j).toString()))) &#123;</span><br><span class="line">                  createCell.setCellValue(reportAddition.getDepartment().getName());</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> (!(<span class="string">"zhuangtai"</span>).equals(cols.get(j)) &amp;&amp; !(<span class="string">"shijian"</span>).equals(cols.get(j).toString())) &#123;</span><br><span class="line">                  <span class="keyword">for</span> (ReportAdditionDetail reportAdditionDetail : reportAdditionDetailList) &#123;</span><br><span class="line">                      <span class="keyword">if</span> (reportAdditionDetail.getAdditionSecondConfig().getId().toString().equals(cols.get(j))) &#123;</span><br><span class="line">                          createCell.setCellValue(reportAdditionDetail.getContent());</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> ((<span class="string">"shijian"</span>).equals(cols.get(j).toString())) &#123;</span><br><span class="line">                  createCell.setCellValue(ToolDate.formatTime(reportAddition.getCreateTime(), <span class="string">"yyyy-MM-dd"</span>, <span class="string">"时间为空"</span>));</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">if</span> ((<span class="string">"zhuangtai"</span>).equals(cols.get(j).toString())) &#123;</span><br><span class="line">                  String reportState = <span class="string">""</span>;</span><br><span class="line">                  <span class="keyword">switch</span> (reportAddition.getState()) &#123;</span><br><span class="line">                      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                          reportState += <span class="string">"待审核"</span>;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                          reportState += <span class="string">"未通过"</span>;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                          reportState += <span class="string">"通过"</span>;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                          reportState += <span class="string">"退回"</span>;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                          reportState += <span class="string">"二次报送"</span>;</span><br><span class="line">                          <span class="keyword">break</span>;</span><br><span class="line">                      <span class="keyword">default</span>:</span><br><span class="line">                  &#125;</span><br><span class="line">                  createCell.setCellValue(reportState);</span><br><span class="line">              &#125;</span><br><span class="line">              createCell.setCellStyle(cellStyle);</span><br><span class="line">              <span class="comment">// 变成文本型</span></span><br><span class="line">              createCell.setCellType(XSSFCell.CELL_TYPE_STRING);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 最后输出</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          response.setHeader(<span class="string">"content-Disposition"</span>,</span><br><span class="line">                  <span class="string">"attachment;filename="</span> + java.net.URLEncoder.encode(additionTitle, <span class="string">"UTF-8"</span>) + <span class="string">".xlsx"</span>);</span><br><span class="line">          excel.write(response.getOutputStream());</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实现导出Excel可以进行选择具体某几列进行导出，这里是用别人的代码，觉得比较高端，所以记录一下，以便自己学习。&lt;br&gt;
    
    </summary>
    
    
      <category term="日常总结" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>使用jquery下拉弹出多选框选择相应信息—20180809</title>
    <link href="http://yoursite.com/2018/08/09/%E4%BD%BF%E7%94%A8jquery%E4%B8%8B%E6%8B%89%E5%BC%B9%E5%87%BA%E5%A4%9A%E9%80%89%E6%A1%86%E9%80%89%E6%8B%A9%E7%9B%B8%E5%BA%94%E4%BF%A1%E6%81%AF%E2%80%9420180809/"/>
    <id>http://yoursite.com/2018/08/09/使用jquery下拉弹出多选框选择相应信息—20180809/</id>
    <published>2018-08-09T00:39:05.000Z</published>
    <updated>2018-08-29T14:24:31.647Z</updated>
    
    <content type="html"><![CDATA[<p>主要记录下自己平常用到的一些技术，方便以后去复习，也是进一步加深自己的印象。不至于忘得太快。<br>这里主要实现的是弹出多选框进行选择信息，用的是别人的插件。<br><a id="more"></a></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>这里自己看到一个插件，挺不错的，这里分享一下。直接下载就可以使用。</p><p>网址如下：<a href="http://www.jqueryfuns.com/resource/1628" target="_blank" rel="noopener">http://www.jqueryfuns.com/resource/1628</a><br>这里只是实现了将信息展示出来，但没有搜索，可以自己加上<br>整体效果展示图：<br><img src="/images/jquery-xmenu.png" alt="Jquery-XMENU插件"></p><p>首先要引入相应的js和css(PS:这里可能引入高版本的js插件可能就会报错)<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">css:</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"$&#123;ctx &#125;/admin/own/css/powerFloat.css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"$&#123;ctx &#125;/admin/own/css/xmenu.css"</span> /&gt;</span></span><br><span class="line">js:</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"$&#123;ctx &#125;/admin/own/js/jquery-1.7.2.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"$&#123;ctx &#125;/admin/own/js/jquery-xmenu.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"$&#123;ctx &#125;/admin/own/js/jquery-powerFloat-min-my.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="前台代码"><a href="#前台代码" class="headerlink" title="前台代码"></a>前台代码</h1><p>input 中隐藏的是 所选择部门的id，跟下面li中rel的属性有关系，rel可以存放你想要传到前台的数据<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row cl"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-label col-xs-4 col-sm-3"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">class</span>=<span class="string">"c-red"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>发送对象：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"formControls col-xs-4 col-sm-3"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"selectdept"</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span> <span class="attr">class</span>=<span class="string">"as"</span> <span class="attr">onclick</span>=<span class="string">"change_zindex()"</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"xmenuspan"</span> &gt;</span>选择用户<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"selectdeptidden"</span> <span class="attr">name</span>=<span class="string">"deptId"</span> <span class="attr">required</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>具体加载初始化Xmenu方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 这里是找到id并初始化加载Xmenu</span></span><br><span class="line">        $(<span class="string">"#selectdept"</span>).xMenu(&#123;</span><br><span class="line">            width :<span class="number">600</span>,</span><br><span class="line">            eventType: <span class="string">"click"</span>, <span class="comment">//事件类型 支持focus click hover</span></span><br><span class="line">            dropmenu:<span class="string">"#m1"</span>,<span class="comment">//弹出层</span></span><br><span class="line">            hiddenID : <span class="string">"selectdeptidden"</span><span class="comment">//隐藏域ID</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p><p>首先必须初始化数据，就是在列表查询的时候 就将下拉框中的值查询出来，不然通过ajax 或者其他的方式<br>会出现错误，因为xmenu.js 一开始就默认初始化加载数据。一开始只需要隐藏即可。具体弹出框的代码如下：<br>这里使用的是jsp页面，html页面不太懂一开始怎么取加载数据<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"m1"</span> <span class="attr">class</span>=<span class="string">"xmenu"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"select-info"</span> <span class="attr">id</span>=<span class="string">"wycselect"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"top-label"</span> <span class="attr">id</span>=<span class="string">"selectuser"</span>&gt;</span>已选用户：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span>  <span class="attr">name</span>=<span class="string">"menu-confirm"</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span> <span class="attr">class</span>=<span class="string">"a-btn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"a-btn-text"</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;departmentList&#125;"</span> <span class="attr">var</span>=<span class="string">"department"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dt</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span>$&#123;department.key&#125;<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span> <span class="attr">style</span>=<span class="string">"display: none"</span> <span class="attr">id</span>=<span class="string">"selectdeptname"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn btn-primary radius size-MINI"</span> <span class="attr">onclick</span>=<span class="string">"inverse(this)"</span>&gt;</span>反选<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;department.value &#125;"</span> <span class="attr">var</span>=<span class="string">"dept"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">rel</span>=<span class="string">"$&#123;dept.id &#125;"</span> &gt;</span>$&#123;dept.name &#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>反选实现方式，就是讲 li 中加上class属性，就代表的是选中状态，也可以模拟点击事件。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">inverse</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        $(obj).next().children().each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="keyword">this</span>).click();</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="后台代码"><a href="#后台代码" class="headerlink" title="后台代码"></a>后台代码</h1><p>后台代码的主要实现就是将要显示的数据查询出来，遍历list即可，这里我用的是Map集合&lt;选择大项名称，小项具体数据List&gt;<br>也可以通过json进行传输{“大项名称”:[“name”：”小项名称”,”id”:”小项id”，….]}<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">list</span><span class="params">(Model model, String reportTime, String deadTime, HttpServletRequest request, Page page)</span> </span>&#123;</span><br><span class="line">Map&lt;String, List&lt;Department&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line"><span class="comment">// 这里查询数据库中的数据</span></span><br><span class="line"><span class="comment">//query data;</span></span><br><span class="line">map.put(<span class="string">"大项名称"</span>，小项list);</span><br><span class="line"><span class="comment">// model进行传值到jsp页面中</span></span><br><span class="line">model.addAttribute(<span class="string">"departmentList"</span>, map);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"页面url"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要记录下自己平常用到的一些技术，方便以后去复习，也是进一步加深自己的印象。不至于忘得太快。&lt;br&gt;这里主要实现的是弹出多选框进行选择信息，用的是别人的插件。&lt;br&gt;
    
    </summary>
    
    
      <category term="日常总结" scheme="http://yoursite.com/tags/%E6%97%A5%E5%B8%B8%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Java从零开始—多线程实现的三种方式 2018-07-22</title>
    <link href="http://yoursite.com/2018/07/22/Java%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F-2018-07-22/"/>
    <id>http://yoursite.com/2018/07/22/Java从零开始—多线程实现的三种方式-2018-07-22/</id>
    <published>2018-07-22T03:19:09.000Z</published>
    <updated>2018-07-22T08:45:13.202Z</updated>
    
    <content type="html"><![CDATA[<p>JAVA多线程实现方式主要有三种：继承Thread类、实现Runnable接口、使用ExecutorService、Callable、Future实现有返回结果的多线程。其中前两种方式线程执行完后都没有返回值，只有最后一种是带返回值的。<br><a id="more"></a></p><h1 id="1、继承Thread类实现多线程"><a href="#1、继承Thread类实现多线程" class="headerlink" title="1、继承Thread类实现多线程"></a>1、继承Thread类实现多线程</h1><p>继承Thread类的方法尽管被我列为一种多线程实现方式，但Thread本质上也是实现了Runnable接口的一个实例，它代表一个线程的实例，并且，启动线程的唯一方法就是通过Thread类的start()实例方法。start()方法是一个native方法，它将启动一个新线程，并执行run()方法。这种方式实现多线程很简单，通过自己的类直接extend Thread，并复写run()方法，就可以启动新线程并执行自己定义的run()方法。例如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadDemo</span>  <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"do  something!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在合适的地方启动线程如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ThreadDemo threadDemo1 = <span class="keyword">new</span> ThreadDemo();</span><br><span class="line">        ThreadDemo threadDemo2 = <span class="keyword">new</span> ThreadDemo();</span><br><span class="line">        threadDemo1.start();</span><br><span class="line">        threadDemo2.start();</span><br></pre></td></tr></table></figure></p><h1 id="2、实现Runnable接口方式实现多线程"><a href="#2、实现Runnable接口方式实现多线程" class="headerlink" title="2、实现Runnable接口方式实现多线程"></a>2、实现Runnable接口方式实现多线程</h1><p>如果自己的类已经extends另一个类，就无法直接extends Thread，此时，必须实现一个Runnable接口，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunnableDemo</span> <span class="keyword">extends</span> <span class="title">BlockOrNo</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"do something"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>为了启动MyThread，需要首先实例化一个Thread，并传入自己的MyThread实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RunnableDemo runnableDemo = <span class="keyword">new</span> RunnableDemo();</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(runnableDemo);</span><br><span class="line">        thread.start();</span><br></pre></td></tr></table></figure></p><p>事实上，当传入一个Runnable target参数给Thread后，Thread的run()方法就会调用target.run()，参考JDK源代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (target != <span class="keyword">null</span>) &#123;</span><br><span class="line">            target.run();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">```    </span><br><span class="line"># 3、使用ExecutorService、Callable、Future实现有返回结果的多线程</span><br><span class="line">ExecutorService、Callable、Future这个对象实际上都是属于Executor框架中的功能类。想要详细了解Executor框架的可以访问http:<span class="comment">//www.javaeye.com/topic/366591 ，这里面对该框架做了很详细的解释。返回结果的线程是在JDK1.5中引入的新特征，确实很实用，有了这种特征我就不需要再为了得到返回值而大费周折了，而且即便实现了也可能漏洞百出。</span></span><br><span class="line">可返回值的任务必须实现Callable接口，类似的，无返回值的任务必须Runnable接口。执行Callable任务后，可以获取一个Future的对象，在该对象上调用get就可以获取到Callable任务返回的Object了，再结合线程池接口ExecutorService就可以实现传说中有返回结果的多线程了。下面提供了一个完整的有返回结果的多线程测试例子，在JDK1.5下验证过没问题可以直接使用。代码如下：    </span><br><span class="line">```java</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ESCFDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"程序开始运行..."</span>);</span><br><span class="line">        Date data1 = <span class="keyword">new</span> Date();</span><br><span class="line">        <span class="keyword">int</span> takeSize = <span class="number">5</span>;</span><br><span class="line">        <span class="comment">// 创建一个线程池</span></span><br><span class="line">        ExecutorService pool = Executors.newFixedThreadPool(takeSize);</span><br><span class="line">        <span class="comment">// 创建有多个返回值的任务</span></span><br><span class="line">        List&lt;Future&gt; futures = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; takeSize; i++) &#123;</span><br><span class="line">            Callable callable = <span class="keyword">new</span> MyCallable(i + <span class="string">""</span>);</span><br><span class="line">            <span class="comment">// 执行任务并获取Future对象</span></span><br><span class="line">            Future f = pool.submit(callable);</span><br><span class="line">            futures.add(f);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关闭线程池</span></span><br><span class="line">        pool.shutdown();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取所有并发任务的运行结果</span></span><br><span class="line">        <span class="keyword">for</span> (Future f : futures) &#123;</span><br><span class="line">            <span class="comment">// 从Future中获取返回值</span></span><br><span class="line">            System.out.println(<span class="string">"&gt;&gt;&gt;"</span> + f.get().toString());</span><br><span class="line">        &#125;</span><br><span class="line">        Date date2 = <span class="keyword">new</span> Date();</span><br><span class="line">        System.out.println(<span class="string">"--程序结束运行----，程序运行时间【"</span> + (date2.getTime() - data1.getTime()) + <span class="string">"】毫秒"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCallable</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">Object</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String taskNum;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyCallable</span><span class="params">(String taskNum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.taskNum = taskNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"&gt;&gt;&gt;&gt;"</span> + taskNum + <span class="string">"任务启动"</span>);</span><br><span class="line">        Date dateTmpl = <span class="keyword">new</span> Date();</span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        Date dateTmp2 = <span class="keyword">new</span> Date();</span><br><span class="line">        <span class="keyword">long</span> time = dateTmp2.getTime() - dateTmpl.getTime();</span><br><span class="line">        System.out.println(<span class="string">"&gt;&gt;&gt;&gt;"</span> + taskNum + <span class="string">"任务终止"</span>);</span><br><span class="line">        <span class="keyword">return</span> taskNum + <span class="string">"任务返回运行结果，当前任务时间【"</span> + time + <span class="string">"毫秒】"</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代码说明：<br>上述代码中Executors类，提供了一系列工厂方法用于创先线程池，返回的线程池都实现了ExecutorService接口。<br>public static ExecutorService newFixedThreadPool(int nThreads)<br>创建固定数目线程的线程池。<br>public static ExecutorService newCachedThreadPool()<br>创建一个可缓存的线程池，调用execute 将重用以前构造的线程（如果线程可用）。如果现有线程没有可用的，则创建一个新线程并添加到池中。终止并从缓存中移除那些已有 60 秒钟未被使用的线程。<br>public static ExecutorService newSingleThreadExecutor()<br>创建一个单线程化的Executor。<br>public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize)<br>创建一个支持定时及周期性的任务执行的线程池，多数情况下可用来替代Timer类。</p><p>ExecutoreService提供了submit()方法，传递一个Callable，或Runnable，返回Future。如果Executor后台线程池还没有完成Callable的计算，这调用返回Future对象的get()方法，会阻塞直到计算完成。<br>搬运来自：  <a href="https://blog.csdn.net/aboy123/article/details/38307539" target="_blank" rel="noopener">https://blog.csdn.net/aboy123/article/details/38307539</a>   </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JAVA多线程实现方式主要有三种：继承Thread类、实现Runnable接口、使用ExecutorService、Callable、Future实现有返回结果的多线程。其中前两种方式线程执行完后都没有返回值，只有最后一种是带返回值的。&lt;br&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java从零开始—字符串 2018-07-21</title>
    <link href="http://yoursite.com/2018/07/21/Java%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E5%AD%97%E7%AC%A6%E4%B8%B2-2018-07-21/"/>
    <id>http://yoursite.com/2018/07/21/Java从零开始—字符串-2018-07-21/</id>
    <published>2018-07-21T02:19:32.000Z</published>
    <updated>2018-07-21T08:40:44.713Z</updated>
    
    <content type="html"><![CDATA[<p>记录自己参考别人博客，一点一点学习Java基础知识。也记录自己一点一点学习成效，便于以后学习。<br><a id="more"></a></p><h1 id="String类"><a href="#String类" class="headerlink" title="String类"></a>String类</h1><p>使用Idea查看String类（源码）<br>打开这个类文件就会发现String类是被final修饰的：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">String</span></span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span>, <span class="title">Comparable</span>&lt;<span class="title">String</span>&gt;, <span class="title">CharSequence</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** The value is used for character storage. */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">char</span> value[];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Cache the hash code for the string */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> hash; <span class="comment">// Default to 0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/** use serialVersionUID from JDK 1.0.2 for interoperability */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">6849794470754667710L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Class String is special cased within the Serialization Stream Protocol.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * A String instance is written into an ObjectOutputStream according to</span></span><br><span class="line"><span class="comment">     * &lt;a href="&#123;<span class="doctag">@docRoot</span>&#125;/../platform/serialization/spec/output.html"&gt;</span></span><br><span class="line"><span class="comment">     * Object Serialization Specification, Section 6.2, "Stream Elements"&lt;/a&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ObjectStreamField[] serialPersistentFields =</span><br><span class="line">        <span class="keyword">new</span> ObjectStreamField[<span class="number">0</span>];</span><br></pre></td></tr></table></figure></p><p>从上面可以看出几点：<br>（1）String类是final类，也即意味着String类不能被继承，并且它的成员方法都默认为final方法。<br>在Java中，被final修饰的类是不允许被继承的，并且该类中的成员方法都默认为final方法。<br>在早期的JVM实现版本中，被final修饰的方法会被转为内嵌调用以提升执行效率。<br>而从Java SE5/6开始，就渐渐摈弃这种方式了。因此在现在的JavaSE版本中，<br>不需要考虑用final去提升方法调用效率。只有在确定不想让该方法被覆盖时，才将方法设置为final。<br>（2）上面列举出了String类中所有的成员属性，从上面可以看出String类其实是通过char数组来保存字符串的。</p><p>　　下面再继续看String类的一些方法实现：jdk版本1.8<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> beginIndex, <span class="keyword">int</span> endIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (beginIndex &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> StringIndexOutOfBoundsException(beginIndex);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (endIndex &gt; value.length) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> StringIndexOutOfBoundsException(endIndex);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> subLen = endIndex - beginIndex;</span><br><span class="line">        <span class="keyword">if</span> (subLen &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> StringIndexOutOfBoundsException(subLen);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ((beginIndex == <span class="number">0</span>) &amp;&amp; (endIndex == value.length)) ? <span class="keyword">this</span></span><br><span class="line">                : <span class="keyword">new</span> String(value, beginIndex, subLen);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">concat</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> otherLen = str.length();</span><br><span class="line">        <span class="keyword">if</span> (otherLen == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> len = value.length;</span><br><span class="line">        <span class="keyword">char</span> buf[] = Arrays.copyOf(value, len + otherLen);</span><br><span class="line">        str.getChars(buf, len);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(buf, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">replace</span><span class="params">(<span class="keyword">char</span> oldChar, <span class="keyword">char</span> newChar)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (oldChar != newChar) &#123;</span><br><span class="line">            <span class="keyword">int</span> len = value.length;</span><br><span class="line">            <span class="keyword">int</span> i = -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">char</span>[] val = value; <span class="comment">/* avoid getfield opcode */</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (++i &lt; len) &#123;</span><br><span class="line">                <span class="keyword">if</span> (val[i] == oldChar) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; len) &#123;</span><br><span class="line">                <span class="keyword">char</span> buf[] = <span class="keyword">new</span> <span class="keyword">char</span>[len];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">                    buf[j] = val[j];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span> (i &lt; len) &#123;</span><br><span class="line">                    <span class="keyword">char</span> c = val[i];</span><br><span class="line">                    buf[i] = (c == oldChar) ? newChar : c;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> String(buf, <span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>从上面的三个方法可以看出，无论是sub操、concat还是replace操作都不是在原有的字符串上进行的，而是重新生成了一个新的字符串对象。也就是说进行这些操作后，最原始的字符串并没有被改变。<br>　在这里要永远记住一点：<br>    <font color="red">“对String对象的任何改变都不影响到原对象，相关的任何change操作都会生成新的对象”。</font><br>    在了解了于String类基础的知识后，下面来看一些在平常使用中容易忽略和混淆的地方</p><h1 id="深入理解String、StringBuffer、StringBuilder"><a href="#深入理解String、StringBuffer、StringBuilder" class="headerlink" title="深入理解String、StringBuffer、StringBuilder"></a>深入理解String、StringBuffer、StringBuilder</h1><p>1.String str=”hello world”和String str=new String(“hello world”)的区别<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> time = <span class="number">50000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String s1 = <span class="string">"hello world"</span>;</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(<span class="string">"hello world"</span>);</span><br><span class="line">        String s3 = <span class="string">"hello world"</span>;</span><br><span class="line">        String s4 = <span class="keyword">new</span> String(<span class="string">"hello world"</span>);</span><br><span class="line">        <span class="comment">// false</span></span><br><span class="line">        System.out.println(s1 == s2);</span><br><span class="line">        <span class="comment">// false</span></span><br><span class="line">        System.out.println(s2 == s4);</span><br><span class="line">        <span class="comment">// true</span></span><br><span class="line">        System.out.println(s1 == s3);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>代码运行结果：<br><img src="/images/javaString1.png" alt="字符串比较运行结果"><br>为什么会出现这样的结果？下面解释一下原因：<br>在前面一篇讲解关于JVM内存机制的一篇博文中提到 ，在class文件中有一部分 来存储编译期间生成的 字面常量以及符号引用，这部分叫做class文件常量池，在运行期间对应着方法区的运行时常量池。</p><p>　　因此在上述代码中，String str1 = “hello world”;和String str3 = “hello world”; 都在编译期间生成了 字面常量和符号引用，运行期间字面常量”hello world”被存储在运行时常量池（当然只保存了一份）。通过这种方式来将String对象跟引用绑定的话，JVM执行引擎会先在运行时常量池查找是否存在相同的字面常量，如果存在，则直接将引用指向已经存在的字面常量；否则在运行时常量池开辟一个空间来存储该字面常量，并将引用指向该字面常量。</p><p>　　总所周知，通过new关键字来生成对象是在堆区进行的，而在堆区进行对象生成的过程是不会去检测该对象是否已经存在的。因此通过new来创建对象，创建出的一定是不同的对象，即使字符串的内容是相同的。    </p><p>2.String、StringBuffer以及StringBuilder的区别<br>既然在Java中已经存在了String类，那为什么还需要StringBuilder和StringBuffer类呢？</p><p>　　那么看下面这段代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> time = <span class="number">50000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String s = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            s += <span class="string">"hello world"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>这句 string += “hello”;的过程相当于将原有的string变量指向的对象内容取出与”hello”作字符串相加操作再存进另一个新的String对象当中，再让string变量指向新生成的对象。每循环一次就会new一个对象。造成资源浪费<br> s += “hello world”的操作事实上会自动被JVM优化成：</p><p>　　StringBuilder str = new StringBuilder(string);</p><p>　　str.append(“hello world”);</p><p>　　str.toString();</p><p>　　再看下面这段代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> time = <span class="number">50000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            sb.append(<span class="string">"hello world"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>StringBuilder只会new一个对象，append操作是在原有对象的基础上进行的。因此在循环了10000次之后，这段代码所占的资源要比上面小得多。</p><p>　　那么有人会问既然有了StringBuilder类，为什么还需要StringBuffer类？查看源代码便一目了然，事实上，StringBuilder和StringBuffer类拥有的成员属性以及成员方法基本相同，区别是StringBuffer类的成员方法前面多了一个关键字：synchronized，不用多说，这个关键字是在多线程访问时起到安全保护作用的,也就是说StringBuffer是线程安全的。</p><p>　　下面摘了2段代码分别来自StringBuffer和StringBuilder，insert方法的具体实现：<br>StringBuilder的insert方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StringBuilder <span class="title">insert</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">char</span>[] str, <span class="keyword">int</span> offset,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.insert(index, str, offset, len);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>StringBuffer的insert方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> StringBuffer <span class="title">insert</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">char</span>[] str, <span class="keyword">int</span> offset,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        toStringCache = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">super</span>.insert(index, str, offset, len);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h1 id="不同场景下三个类性能测试"><a href="#不同场景下三个类性能测试" class="headerlink" title="不同场景下三个类性能测试"></a>不同场景下三个类性能测试</h1><p>从第二节我们已经看出了三个类的区别，这一小节我们来做个小测试，来测试一下三个类的性能区别：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> time = <span class="number">50000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        StringBuilder sb = new StringBuilder();</span></span><br><span class="line"><span class="comment">//        for (int i = 0; i &lt; 10000; i++) &#123;</span></span><br><span class="line"><span class="comment">//            sb.append("hello world");</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        String s = "";</span></span><br><span class="line"><span class="comment">//        for (int i = 0; i &lt; 10000; i++) &#123;</span></span><br><span class="line"><span class="comment">//            s += "hello world";</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        String s1 = "hello world";</span></span><br><span class="line"><span class="comment">//        String s2 = new String("hello world");</span></span><br><span class="line"><span class="comment">//        String s3 = "hello world";</span></span><br><span class="line"><span class="comment">//        String s4 = new String("hello world");</span></span><br><span class="line"><span class="comment">//        System.out.println(s1 == s2);</span></span><br><span class="line"><span class="comment">//        System.out.println(s2 == s4);</span></span><br><span class="line"><span class="comment">//        System.out.println(s1 == s3);</span></span><br><span class="line">        testString();</span><br><span class="line">        testOptimaString();</span><br><span class="line">        testStringBuffer();</span><br><span class="line">        testStringBuilder();</span><br><span class="line">        test1String();</span><br><span class="line">        test2String();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String s = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">long</span> begin = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; time; i++) &#123;</span><br><span class="line">            s += <span class="string">"java"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"操作"</span> + s.getClass().getName() + <span class="string">"类型使用时间为"</span> + (end - begin) + <span class="string">"毫秒"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testOptimaString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String s = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">long</span> begin  = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; time; i ++) &#123;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            sb.append(<span class="string">"java"</span>);</span><br><span class="line">            s = sb.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"优化字符串相加时间"</span>+(end - begin)+<span class="string">"毫秒"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testStringBuilder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">long</span> begin = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; time; i++) &#123;</span><br><span class="line">            sb.append(<span class="string">"java"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"操作"</span> + sb.getClass().getName() + <span class="string">"类型使用时间为"</span> + (end - begin) + <span class="string">"毫秒"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testStringBuffer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">long</span> begin = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; time; i++) &#123;</span><br><span class="line">            sb.append(<span class="string">"java"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"操作"</span> + sb.getClass().getName() + <span class="string">"类型使用时间为"</span> + (end - begin) + <span class="string">"毫秒"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test1String</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> begin = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;time; i++) &#123;</span><br><span class="line">            String s= <span class="string">"I"</span>+<span class="string">"love"</span>+<span class="string">"java"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"字符串直接相加操作1："</span>+(end-begin)+<span class="string">"毫秒"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test2String</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> begin = System.currentTimeMillis();</span><br><span class="line">        String s1 = <span class="string">"I"</span>;</span><br><span class="line">        String s2 = <span class="string">"love"</span>;</span><br><span class="line">        String s3 = <span class="string">"java"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;time; i++) &#123;</span><br><span class="line">            String s= s1 + s2 +s3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"字符串间接相加操作2："</span>+(end-begin)+<span class="string">"毫秒"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>测试结果（win10，IDEA，JDK8)：<br><img src="/images/javaString2.png" alt="性能比较"><br>得到验证。</p><p>　　下面对上面的执行结果进行一般性的解释：</p><p>　　1）对于直接相加字符串，效率很高，因为在编译器便确定了它的值，也就是说形如”I”+”love”+”java”; 的字符串相加，在编译期间便被优化成了”Ilovejava”。这个可以用javap -c命令反编译生成的class文件进行验证。</p><p>　　对于间接相加（即包含字符串引用），形如s1+s2+s3; 效率要比直接相加低，因为在编译器不会对引用变量进行优化。</p><p>　　2）String、StringBuilder、StringBuffer三者的执行效率：</p><p>　　StringBuilder &gt; StringBuffer &gt; String</p><p>　　当然这个是相对的，不一定在所有情况下都是这样。</p><p>　　比如String str = “hello”+ “world”的效率就比 StringBuilder st  = new StringBuilder().append(“hello”).append(“world”)要高。</p><p>　　因此，这三个类是各有利弊，应当根据不同的情况来进行选择使用：</p><p>　　当字符串相加操作或者改动较少的情况下，建议使用 String str=”hello”这种形式；</p><p>　　当字符串相加操作较多的情况下，建议使用StringBuilder，如果采用了多线程，则使用StringBuffer。</p><h1 id="关于String、StringBuffer的面试题"><a href="#关于String、StringBuffer的面试题" class="headerlink" title="关于String、StringBuffer的面试题"></a>关于String、StringBuffer的面试题</h1><p>下面是一些常见的关于String、StringBuffer的一些面试笔试题，若有不正之处，请谅解和批评指正。</p><ol><li>下面这段代码的输出结果是什么？</li></ol><p>　　String a = “hello2”; 　　String b = “hello” + 2; 　　System.out.println((a == b));</p><p>　　输出结果为：true。原因很简单，”hello”+2在编译期间就已经被优化成”hello2”，因此在运行期间，变量a和变量b指向的是同一个对象。<br>2.下面这段代码的输出结果是什么？</p><p>　　String a = “hello2”; 　  String b = “hello”;       String c = b + 2;       System.out.println((a == c));</p><p>　　输出结果为:false。由于有符号引用的存在，所以  String c = b + 2;不会在编译期间被优化，不会把b+2当做字面常量来处理的，因此这种方式生成的对象事实上是保存在堆上的。因此a和c指向的并不是同一个对象。<br>3.下面这段代码的输出结果是什么？</p><p>　　String a = “hello2”;   　 final String b = “hello”;       String c = b + 2;       System.out.println((a == c));</p><p>　　输出结果为：true。对于被final修饰的变量，会在class文件常量池中保存一个副本，也就是说不会通过连接而进行访问，对final变量的访问在编译期间都会直接被替代为真实的值。那么String c = b + 2;在编译期间就会被优化成：String c = “hello” + 2;<br>4.下面这段代码输出结果为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringInterviewDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String a = <span class="string">"hello2"</span>;</span><br><span class="line">        <span class="keyword">final</span> String b =getHello();</span><br><span class="line">        String c = b + <span class="number">2</span>;</span><br><span class="line">        System.out.println( a == c);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出结果为false。这里面虽然将b用final修饰了，但是由于其赋值是通过方法调用返回的，那么它的值只能在运行期间确定，因此a和c指向的不是同一个对象。<br>5.下面这段代码的输出结果是什么？<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringInterviewDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        String a = "hello2";</span></span><br><span class="line"><span class="comment">//        final String b =getHello();</span></span><br><span class="line"><span class="comment">//        String c = b + 2;</span></span><br><span class="line"><span class="comment">//        System.out.println( a == c);</span></span><br><span class="line">        String a = <span class="string">"hello"</span>;</span><br><span class="line">        String b = <span class="keyword">new</span> String(<span class="string">"hello"</span>);</span><br><span class="line">        String c = <span class="keyword">new</span> String(<span class="string">"hello"</span>);</span><br><span class="line">        String d = a.intern();</span><br><span class="line">        System.out.println(a==b);</span><br><span class="line">        System.out.println(c==b);</span><br><span class="line">        System.out.println(d==b);</span><br><span class="line">        System.out.println(a==d);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><pre><code>输出结果为（JDK版本 JDK8)</code></pre><p> <img src="/images/javaString3.png" alt="字符串比较"><br> 这里面涉及到的是String.intern方法的使用。在String类中，intern方法是一个本地方法，在JAVA SE6之前，intern方法会在运行时常量池中查找是否存在内容相同的字符串，如果存在则返回指向该字符串的引用，如果不存在，则会将该字符串入池，并返回一个指向该字符串的引用。因此，a和d指向的是同一个对象。</p><p>6.String str = new String(“abc”)创建了多少个对象？<br>个问题在很多书籍上都有说到比如《Java程序员面试宝典》，包括很多国内大公司笔试面试题都会遇到，大部分网上流传的以及一些面试书籍上都说是2个对象，这种说法是片面的。</p><p>　　如果有不懂得地方可以参考这篇帖子：</p><p>　　<a href="http://rednaxelafx.iteye.com/blog/774673/" target="_blank" rel="noopener">http://rednaxelafx.iteye.com/blog/774673/</a></p><p>　　首先必须弄清楚创建对象的含义，创建是什么时候创建的？这段代码在运行期间会创建2个对象么？毫无疑问不可能，<br>很显然，new只调用了一次，也就是说只创建了一个对象。</p><p>　　而这道题目让人混淆的地方就是这里，这段代码在运行期间确实只创建了一个对象，即在堆上创建了”abc”对象。而为什么大家都在说是2个对象呢，这里面要澄清一个概念  该段代码执行过程和类的加载过程是有区别的。在类加载的过程中，确实在运行时常量池中创建了一个”abc”对象，而在代码执行过程中确实只创建了一个String对象。</p><p>　　因此，这个问题如果换成 String str = new String(“abc”)涉及到几个String对象？合理的解释是2个。</p><p>　　个人觉得在面试的时候如果遇到这个问题，可以向面试官询问清楚”是这段代码执行过程中创建了多少个对象还是涉及到多少个对象“再根据具体的来进行回答。<br>7.下面这段代码1）和2）的区别是什么？\<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str1 = <span class="string">"I"</span>;</span><br><span class="line">        <span class="comment">//str1 += "love"+"java";        1)</span></span><br><span class="line">        str1 = str1+<span class="string">"love"</span>+<span class="string">"java"</span>;      <span class="comment">//2)</span></span><br><span class="line">         </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>1）的效率比2）的效率要高，1）中的”love”+”java”在编译期间会被优化成”lovejava”，而2）中的不会被优化。<br>可以看出，在1）中只进行了一次append操作，而在2）中进行了两次append操作。<br>搬运来自：<a href="http://www.cnblogs.com/dolphin0520/p/3778589.html" target="_blank" rel="noopener">http://www.cnblogs.com/dolphin0520/p/3778589.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录自己参考别人博客，一点一点学习Java基础知识。也记录自己一点一点学习成效，便于以后学习。&lt;br&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate 中利用Sql进行查询</title>
    <link href="http://yoursite.com/2018/06/29/Hibernate-%E4%B8%AD%E5%88%A9%E7%94%A8Sql%E8%BF%9B%E8%A1%8C%E6%9F%A5%E8%AF%A2/"/>
    <id>http://yoursite.com/2018/06/29/Hibernate-中利用Sql进行查询/</id>
    <published>2018-06-29T01:20:52.000Z</published>
    <updated>2018-06-30T09:04:56.466Z</updated>
    
    <content type="html"><![CDATA[<p>最近刚开始接触Hibernate框架，不知道如何使用，现在也弄得迷迷糊糊的。使用一段时间，发现Hibernte中hql语句查询也是很方便，后来在网上查阅资料，发现也能用原生的sql查询。<br>根据网上的资料，记录一下自己学习Hibernate框架，以后也可以方便自己查看。<br><a id="more"></a></p><h1 id="Hibernate-查询方式"><a href="#Hibernate-查询方式" class="headerlink" title="Hibernate 查询方式"></a>Hibernate 查询方式</h1><p>hibernate的查询方式有HQL,Cretiria和SQL.<br>hql查询面向对象的语句风格确实要简洁一些(只是那么一点),<br>cretiria本人目前没在项目中使用过.<br>有一半的时候, 我在Hibernate框架中使用的是SQL查询,<br>简单,可控, 原生. 使用起来风格原始,简单有效, 不增加学习成本,且利于多人开发的维护. </p><h1 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Service层代码</span><br><span class="line"><span class="keyword">public</span> List&lt;Map&lt;String,Object&gt;&gt; findAbandoned2(String name ,String  kjyear) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ToolStr.isEmpty(name) &amp;&amp; ToolStr.isEmpty(kjyear))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Map&lt;String , Object&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        Map&lt;String , Object&gt; params2 = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        params2.put(<span class="string">" consumableName.name like "</span>,name);</span><br><span class="line">        params2.put(<span class="string">" consumableAudit = "</span> ,<span class="number">1</span> );</span><br><span class="line">        List&lt;Consumables&gt; conlist = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        conlist.addAll(     consumablesService.find4Params(params2));</span><br><span class="line">        List&lt;Long&gt; listIds = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        listIds.addAll(conlist.stream().map(Consumables::getId).collect(Collectors.toList()));</span><br><span class="line">        StringBuffer bs = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        listIds.forEach( id -&gt; &#123;</span><br><span class="line">            bs.append(id + <span class="string">","</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        String sql = <span class="string">"SELECT\n"</span> +</span><br><span class="line">                <span class="string">"chejian.id 购入车间id,\n"</span> +</span><br><span class="line">                <span class="string">"chejian.`name` 购入者车间,\n"</span> +</span><br><span class="line">                <span class="string">"ren.name 购入者,\n"</span> +</span><br><span class="line">                <span class="string">"wupin.updateTime 购入日期,\n"</span> +</span><br><span class="line">                <span class="string">"wupin.price 购入单价,\n"</span> +</span><br><span class="line">                <span class="string">"wupin.maxNum 购入数量,\n"</span> +</span><br><span class="line">                <span class="string">"wupin.totalAmount 购入金额,\n"</span> +</span><br><span class="line">                <span class="string">"(wupin.maxNum-wupin.num) 领取数量\n"</span> +</span><br><span class="line">                <span class="string">"\n"</span> +</span><br><span class="line">                <span class="string">"\n"</span> +</span><br><span class="line">                <span class="string">"FROM\n"</span> +</span><br><span class="line">                <span class="string">"admin_consumables wupin\n"</span> +</span><br><span class="line">                <span class="string">"LEFT JOIN admin_workerman ren ON wupin.conPribcipal = ren.`code`\n"</span> +</span><br><span class="line">                <span class="string">"LEFT JOIN admin_workerman banzu ON ren.fatherId = banzu.id\n"</span> +</span><br><span class="line">                <span class="string">"LEFT JOIN admin_workerman chejian ON banzu.fatherId = chejian.id\n"</span> +</span><br><span class="line">                <span class="string">"LEFT JOIN admin_consumablestype pinming ON pinming.id = wupin.consumableName_id\n"</span> +</span><br><span class="line">                <span class="string">"WHERE wupin.id in( "</span>+</span><br><span class="line">                bs.substring(<span class="number">0</span>,bs.length()-<span class="number">1</span>)</span><br><span class="line">                + <span class="string">") and wupin.kjYear = :kjyear \n"</span> +</span><br><span class="line">                <span class="string">"GROUP BY chejian.id\n"</span> +</span><br><span class="line">                <span class="string">"ORDER BY chejian.id ASC"</span>;</span><br><span class="line"></span><br><span class="line">        params.put(<span class="string">"kjyear"</span>,Integer.valueOf(kjyear));</span><br><span class="line">        <span class="keyword">return</span> abandonedDao.find4SQL(sql, params);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里sql语句没有看懂，以后再看。如果分页的话，可以用Hierbante封装的方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Dao层代码</span><br><span class="line"><span class="keyword">public</span> List&lt;Map&lt;String,Object&gt;&gt; find4SQL(<span class="keyword">final</span> String sql, <span class="keyword">final</span> Map&lt;String, Object&gt; params) &#123;</span><br><span class="line">        SQLQuery query = getSession().createSQLQuery(sql);</span><br><span class="line">        <span class="comment">// 转成Map</span></span><br><span class="line">        query.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP);</span><br><span class="line"><span class="comment">//        query.setCacheable(true);</span></span><br><span class="line">        QUERY_INIT(query, params);</span><br><span class="line">        <span class="keyword">return</span> query.list();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>查询出来是List&lt;Map&lt;String,Object&gt;&gt; 我用的是jsp页面 ，在jsp页面容易遍历。直接遍历list，然后直接点出来 查询时候的列名称 就可以取到值了。<br>如果是List<string> 在jsp页面中 直接  Object[index]就可以取出想要的值。<br>搬运来自： <a href="https://blog.csdn.net/hjiacheng/article/details/53717727" target="_blank" rel="noopener">https://blog.csdn.net/hjiacheng/article/details/53717727</a> Hibernate SQLQuery原生sql查询<br><a href="https://blog.csdn.net/woduoxiangfeiya/article/details/53536033" target="_blank" rel="noopener">https://blog.csdn.net/woduoxiangfeiya/article/details/53536033</a> 前端jsp页面获取List&lt;List<string>&gt;格式数据<br><a href="https://blog.csdn.net/leave417/article/details/78346088" target="_blank" rel="noopener">https://blog.csdn.net/leave417/article/details/78346088</a> jsp页面遍历List&lt;Map&lt;String,Object&gt;&gt;</string></string></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近刚开始接触Hibernate框架，不知道如何使用，现在也弄得迷迷糊糊的。使用一段时间，发现Hibernte中hql语句查询也是很方便，后来在网上查阅资料，发现也能用原生的sql查询。&lt;br&gt;根据网上的资料，记录一下自己学习Hibernate框架，以后也可以方便自己查看。&lt;br&gt;
    
    </summary>
    
    
      <category term="Hibernate" scheme="http://yoursite.com/tags/Hibernate/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate用Sql查询in的用法</title>
    <link href="http://yoursite.com/2018/06/29/Hibernate%E7%94%A8Sql%E6%9F%A5%E8%AF%A2in%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/06/29/Hibernate用Sql查询in的用法/</id>
    <published>2018-06-29T00:27:23.000Z</published>
    <updated>2018-06-30T09:04:55.917Z</updated>
    
    <content type="html"><![CDATA[<p>刚开始接触Hibernate,不是很会Hibernate框架，因为要做一个查询，编写的是SQL语句，想用Hibernate框架查询，后来在网上查阅资料，发现和一般的hql语句查询几乎一样。<br>由于在Hibernate用到了sql语句，所以记录一下自己学到的一些新东西。能方便以后查看。在处理Hibernate的实体查询，一般可以采用多种方式处理复杂的查询，比如HQL的灵活使用，<br>Query的外部参数化赋值等。但是，对于IN字句在sql中的处理，也会出现，不过，一般不建议使用这样的sql处理，转而采用关联条件来处理这种查询。<br><a id="more"></a></p><h1 id="编写MySQL语句"><a href="#编写MySQL语句" class="headerlink" title="编写MySQL语句"></a>编写MySQL语句</h1><p>首先在可视化工具中编写sql语句，如果可以达到想要的结果，这一步就搞定了。</p><h1 id="在Hibernate中利用sql语句查询"><a href="#在Hibernate中利用sql语句查询" class="headerlink" title="在Hibernate中利用sql语句查询"></a>在Hibernate中利用sql语句查询</h1><p>一般对于可变参数传入在in字句中，大概有下面几种总结的方法：<br>1、直接外面拼转sql,这种拼sql的方式容易出现sql注入，比如in(123,drop table ttt,)，而且如果in字句字符串太多，也会受限的，所以一般不赞成使用。</p><p>2、进一步解决上面的问题就是拼赋值sql,采用预处理处理，比如Select * from tab t where t.id in(?,?,?….),参数一并传入就行额。缺点还是受限于要包含的那些记录数据量。</p><p>3、一般在hibernate处理这个也比较方便，采用显示参数传递赋值，如 : String sql =  from Task t where t.id(:ids)</p><p>4、建议系统中出现的in处理，直接采用关联查询处理，in字句本来性能就差，没做好就是是全表扫描。</p><h1 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Service层代码：</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 进行查询手机号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> deptIds 传入的部门id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">find4Phone</span><span class="params">(String[] deptIds)</span> </span>&#123;</span><br><span class="line">     <span class="comment">// 将String数组转成Long数组</span></span><br><span class="line">        Long[] deptId = (Long[]) ConvertUtils.convert(deptIds, Long.class);</span><br><span class="line">        <span class="comment">// SQL 语句</span></span><br><span class="line">        String sql = <span class="string">"SELECT phone from core_department_phone WHERE department_id IN (:deptId)"</span>;</span><br><span class="line">        <span class="comment">// 查询</span></span><br><span class="line">        <span class="keyword">return</span> departmentPhoneDao.find4Phone(sql, deptId);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>首先部门id不是String类型的。先转成Long类型的数组，将sql语句写上，这里使用占位符的方式，避免SQL注入。in语句处理容易全表扫描，所以可以优化一下in语句。<br>Dao层代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询手机号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> deptId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  List&lt;String&gt; <span class="title">find4Phone</span><span class="params">(String sql, Long[] deptId)</span> </span>&#123;</span><br><span class="line">        SQLQuery query = <span class="keyword">this</span>.getSession().createSQLQuery(sql);</span><br><span class="line">        query.setParameterList(<span class="string">"deptId"</span>,deptId);</span><br><span class="line">        <span class="keyword">return</span> query.list();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>这里用到了setParameterList中key的属性是前面in语句中占位符的内容deptId需要传入的。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setParameterList方法</span><br><span class="line"><span class="function"><span class="keyword">public</span> Query <span class="title">setParameterList</span><span class="params">(String name, Object[] values)</span></span>;</span><br></pre></td></tr></table></figure></p><p>后面可以传入任意类型的对象数组，也可以传入List集合。<br>搬运来自 ： <a href="https://blog.csdn.net/wodestudy/article/details/38200421" target="_blank" rel="noopener">https://blog.csdn.net/wodestudy/article/details/38200421</a> Hibernate 处理查询 in 字句<br><a href="https://blog.csdn.net/qq_23339149/article/details/54692942" target="_blank" rel="noopener">https://blog.csdn.net/qq_23339149/article/details/54692942</a> Hibernate如何使用in关键字</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚开始接触Hibernate,不是很会Hibernate框架，因为要做一个查询，编写的是SQL语句，想用Hibernate框架查询，后来在网上查阅资料，发现和一般的hql语句查询几乎一样。&lt;br&gt;由于在Hibernate用到了sql语句，所以记录一下自己学到的一些新东西。能方便以后查看。在处理Hibernate的实体查询，一般可以采用多种方式处理复杂的查询，比如HQL的灵活使用，&lt;br&gt;Query的外部参数化赋值等。但是，对于IN字句在sql中的处理，也会出现，不过，一般不建议使用这样的sql处理，转而采用关联条件来处理这种查询。&lt;br&gt;
    
    </summary>
    
    
      <category term="Hibernate" scheme="http://yoursite.com/tags/Hibernate/"/>
    
  </entry>
  
  <entry>
    <title>JS中return的用法</title>
    <link href="http://yoursite.com/2018/06/28/JS%E4%B8%ADreturn%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2018/06/28/JS中return的用法/</id>
    <published>2018-06-28T05:08:20.000Z</published>
    <updated>2018-06-28T14:22:27.248Z</updated>
    
    <content type="html"><![CDATA[<p>在网上看到一篇关于JS中return的用法特此记录一下、以便自己加深印象<br><a id="more"></a></p><h1 id="一、返回控制与函数结果"><a href="#一、返回控制与函数结果" class="headerlink" title="一、返回控制与函数结果"></a>一、返回控制与函数结果</h1><p>语法为：return 表达式; 语句结束函数执行，返回调用函数，而且把表达式的值作为函数的结果</p><h1 id="二、返回控制"><a href="#二、返回控制" class="headerlink" title="二、返回控制"></a>二、返回控制</h1><p>在大多数情况下,为事件处理函数返回false,可以防止默认的事件行为.例如,默认情况下点击一个<a>元素,页面会跳转到该元素href属性指定的页.<br> Return False 就相当于终止符，Return True 就相当于执行符。<br> 在js中return false的作用一般是用来取消默认动作的。比如你单击一个链接除了触发你的<br> onclick时间（如果你指定的话）以外还要触发一个默认事件就是执行页面的跳转。所以如果<br> 你想取消对象的默认动作就可以return false。</a></p><p>首先在js中，我们常用return false来阻止提交表单或者继续执行下面的代码，通俗的来说就是阻止执行默认的行为。<br><code>`</code>JavaScript<br>function a() {<br>    if (True) {<br>    return false;<br>}<br>}<br>这是没有任何问题的。<br>如果改成这种<br>function Test() {<br>    a();<br>    b();<br>    c();<br>}<br>即使a函数返回return false 阻止提交了，但是不影响 b（）以及 c（）函数的执行。<br>在Test（）函数里调用a()函数，那里面return false 对于Test（）函数来说，只是相当于返回值。而不能阻止Test（）函数执行。<br>总之：return false 只在当前函数有效，不会影响其他外部函数的执行。</p><h1 id="三：总结"><a href="#三：总结" class="headerlink" title="三：总结"></a>三：总结</h1><p>retrun true； 返回正确的处理结果。<br>return false；返回错误的处理结果，终止处理。<br>return；把控制权返回给页面。</p><h1 id="四：区别"><a href="#四：区别" class="headerlink" title="四：区别"></a>四：区别</h1><ol><li>return;返回null，起到中断方法执行的效果，只要不return false事件处理函数将会继续执行，表单将提交</li><li>return false;，事件处理函数会取消事件，不再继续向下执行。比如表单将终止提交。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在网上看到一篇关于JS中return的用法特此记录一下、以便自己加深印象&lt;br&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>JS实现输入模糊查询下拉选</title>
    <link href="http://yoursite.com/2018/06/28/JS%E5%AE%9E%E7%8E%B0%E8%BE%93%E5%85%A5%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%E4%B8%8B%E6%8B%89%E9%80%89/"/>
    <id>http://yoursite.com/2018/06/28/JS实现输入模糊查询下拉选/</id>
    <published>2018-06-28T03:24:32.000Z</published>
    <updated>2018-06-28T14:22:27.904Z</updated>
    
    <content type="html"><![CDATA[<p>一开始没有接触过JS，今天看了一些JS，记录一下自己学习JS的过程吧。不是太懂JS<br><a id="more"></a></p><h1 id="HTML页面"><a href="#HTML页面" class="headerlink" title="HTML页面"></a>HTML页面</h1><p>本次主要是实现输入之后模糊查询下拉框中显示input输入框中模糊的内容，具体html代码如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row cl"</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"form-label col-xs-4 col-sm-3"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">class</span>=<span class="string">"c-red"</span>&gt;</span>*<span class="tag">&lt;/<span class="name">span</span>&gt;</span>物品名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"formControls col-xs-4 col-sm-3"</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"makeupCo"</span> <span class="attr">id</span>=<span class="string">"makeupCo"</span> <span class="attr">class</span>=<span class="string">"makeinp"</span> <span class="attr">onfocus</span>=<span class="string">"setinput()"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">onblur</span>=<span class="string">"setinput();"</span> <span class="attr">onmouseup</span>=<span class="string">"setinput();"</span> <span class="attr">placeholder</span>=<span class="string">"请选择或输入"</span>/&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"select-box  f-14 conchildtype"</span> <span class="attr">name</span>=<span class="string">"consumableName.id"</span> <span class="attr">style</span>=<span class="string">"width: 300px"</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">id</span>=<span class="string">"conchildtype"</span> <span class="attr">required</span>=<span class="string">"true"</span> <span class="attr">onchange</span>=<span class="string">"changeF(this)"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">count</span>=<span class="string">"-1"</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">%--selected="selected"--%</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码"></a>JS代码</h1><p>首先当鼠标获取到焦点时触发setinput方法，onblur 事件会在对象失去焦点时发生。当在段落上松开鼠标按钮时执行 JavaScript：<br>具体setinput方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** input 改变 下拉选改变 可输入input */</span> </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">setinput</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// 把所有下拉选去掉</span></span><br><span class="line">     $(<span class="string">".conchildtype option"</span>).attr(<span class="string">'selected'</span>, <span class="literal">false</span>);</span><br><span class="line">     <span class="comment">// 获取物品名称的值</span></span><br><span class="line">     <span class="keyword">var</span> value = $(<span class="string">"#makeupCo"</span>).val();</span><br><span class="line">     <span class="comment">// 遍历下拉选</span></span><br><span class="line">     $(<span class="string">".conchildtype option"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">         <span class="comment">// 下拉选的所有的值</span></span><br><span class="line">         <span class="keyword">var</span> selectstr = $(<span class="keyword">this</span>).text();</span><br><span class="line">         <span class="comment">//console.log(selectstr.indexOf(value) != -1);</span></span><br><span class="line">         <span class="keyword">if</span> (selectstr.indexOf(value, <span class="number">0</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">             <span class="comment">// 将下拉选的值选中</span></span><br><span class="line">             $(<span class="keyword">this</span>).prop(<span class="string">'selected'</span>, <span class="string">'selected'</span>);</span><br><span class="line">             <span class="comment">// console.log($(this).prop('selected'));</span></span><br><span class="line">             <span class="comment">// 找到则不在遍历 退出循环</span></span><br><span class="line">             <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>当改变下拉选的值，执行onchange里面的方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeF</span>(<span class="params">this_</span>) </span>&#123;</span><br><span class="line">      $(this_).prev(<span class="string">"input"</span>).val($(this_).find(<span class="string">"option:selected"</span>).text());</span><br><span class="line">      <span class="comment">//$("#conchildtype").css(&#123;"display":"none"&#125;);</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>参考自： <a href="https://blog.csdn.net/sun2015_07_24/article/details/53023167" target="_blank" rel="noopener">https://blog.csdn.net/sun2015_07_24/article/details/53023167</a> 简单实用js——可输入可选择可模糊查询的select下拉</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一开始没有接触过JS，今天看了一些JS，记录一下自己学习JS的过程吧。不是太懂JS&lt;br&gt;
    
    </summary>
    
    
      <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>云MAS 发送短信</title>
    <link href="http://yoursite.com/2018/06/28/%E4%BA%91MAS-%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1/"/>
    <id>http://yoursite.com/2018/06/28/云MAS-发送短信/</id>
    <published>2018-06-28T00:30:36.000Z</published>
    <updated>2018-06-28T14:22:28.341Z</updated>
    
    <content type="html"><![CDATA[<p>使用中国移动接口，用Http请求，进行发送短信<br><a id="more"></a></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>首先阅读短信接口文档，采用什么方式进行访问，参数是哪些。这里以云MAS 接口文档为例。<br>接口中包含的信息，url地址，类型，请求方式，特别的如一些加密方式，下面也会有一些示例<br>代码，以及请求成功后响应的信息。<br>这里参考网上一些资料，请求封装参数。进行发送短信<br>本篇文章主要讲的是POST请求，进行加密传输。</p><h1 id="具体代码实现"><a href="#具体代码实现" class="headerlink" title="具体代码实现"></a>具体代码实现</h1><p>具体代码如下封装成一个工具类：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.sun.deploy.net.HttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.codec.binary.Base64;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.httpclient.HttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.httpclient.HttpException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.httpclient.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.httpclient.methods.PostMethod;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.httpclient.methods.StringRequestEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClientBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wycfight@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 发送短信</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-06-27 08:58</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@modified</span> By:</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 请求的接口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">"http://***"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 集团客户名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ECNAME = <span class="string">"***"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String APID = <span class="string">"***"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SECRETKEY = <span class="string">"***"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 网管签名编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SIGN = <span class="string">"***"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 扩展码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ADDSERIAL = <span class="string">"***"</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * API输入参数签名结果，签名算法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String mac = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到加密的内容</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone   手机号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content 短信内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getEncode</span><span class="params">(String phone, String content)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        map.put(<span class="string">"ecName"</span>, ECNAME);</span><br><span class="line">        map.put(<span class="string">"apId"</span>, APID);</span><br><span class="line">        map.put(<span class="string">"secretKey"</span>, SECRETKEY);</span><br><span class="line">        map.put(<span class="string">"mobiles"</span>, phone);</span><br><span class="line">        map.put(<span class="string">"content"</span>, content);</span><br><span class="line">        map.put(<span class="string">"addSerial"</span>, ADDSERIAL);</span><br><span class="line">        map.put(<span class="string">"sign"</span>, SIGN);</span><br><span class="line">        <span class="comment">// 封装成StringBuffer</span></span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        stringBuffer.append(ECNAME);</span><br><span class="line">        stringBuffer.append(APID);</span><br><span class="line">        stringBuffer.append(SECRETKEY);</span><br><span class="line">        stringBuffer.append(phone);</span><br><span class="line">        stringBuffer.append(content);</span><br><span class="line">        stringBuffer.append(SIGN);</span><br><span class="line">        stringBuffer.append(ADDSERIAL);</span><br><span class="line">        <span class="comment">// 进行MD5加密(使用工具类)</span></span><br><span class="line">        mac = MD5Util.md5(stringBuffer.toString());</span><br><span class="line">        map.put(<span class="string">"mac"</span>, mac);</span><br><span class="line">        <span class="comment">// 转成JSON</span></span><br><span class="line">        String request = JSON.toJSONString(map);</span><br><span class="line">        String encode = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 这里要进行UTF-8 不然在WEB中请求中文就会出现乱码，main方法不会  进行64位加密</span></span><br><span class="line">            encode = Base64.encodeBase64String(request.getBytes(<span class="string">"UTF-8"</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(encode);</span><br><span class="line">        <span class="keyword">return</span> encode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 短信发送</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone   手机号 有的可能传的是数组，</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content 短信内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title">sendSms</span><span class="params">(String phone, String content)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        String encode = getEncode(phone, content);</span><br><span class="line">        <span class="comment">// 使用HttpClient 请求</span></span><br><span class="line">        HttpClient httpClient = <span class="keyword">new</span> HttpClient();</span><br><span class="line">        <span class="comment">// Post请求的方式</span></span><br><span class="line">        PostMethod method = <span class="keyword">new</span> PostMethod(URL);</span><br><span class="line">        <span class="comment">// 请求头</span></span><br><span class="line">        method.addRequestHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/json; charset=utf-8"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 判断加密得到的Base64位是否为空</span></span><br><span class="line">            <span class="keyword">if</span> (!ToolStr.isEmpty(encode)) &#123;</span><br><span class="line">            <span class="comment">// 进行封装参数</span></span><br><span class="line">                StringRequestEntity entity = <span class="keyword">new</span> StringRequestEntity(encode, <span class="string">"application/json; charset=utf-8"</span>, <span class="string">"UTF-8"</span>);</span><br><span class="line">                method.setRequestEntity(entity);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 执行并获取到状态码</span></span><br><span class="line">            <span class="keyword">int</span> i = httpClient.executeMethod(method);</span><br><span class="line">            <span class="keyword">if</span> (HttpStatus.SC_OK == i) &#123;</span><br><span class="line">            <span class="comment">// 取到服务器相应的信息</span></span><br><span class="line">                <span class="comment">// 取到服务器相应的信息</span></span><br><span class="line">                InputStream inputStream = method.getResponseBodyAsStream();</span><br><span class="line">                BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(inputStream));</span><br><span class="line">                StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">                String str = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">while</span> ((str = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    stringBuffer.append(str);</span><br><span class="line">                &#125;</span><br><span class="line">                JSONObject jsonObject = JSON.parseObject(stringBuffer.toString());</span><br><span class="line">                params.put(<span class="string">"response"</span>, jsonObject);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                params.put(<span class="string">"error"</span>, i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (HttpException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> params;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * List&lt;String&gt;转成字符串并以","隔开</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  &#123;[type]&#125; List&lt;String&gt; list          查询出来的list集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;[type]&#125;              "123,456,789"</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">listToString</span><span class="params">(List&lt;String&gt; list)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(list==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer result = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">boolean</span> first = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">//第一个前面不拼接","</span></span><br><span class="line">        <span class="keyword">for</span>(String string :list) &#123;</span><br><span class="line">            <span class="keyword">if</span>(first) &#123;</span><br><span class="line">                first=<span class="keyword">false</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                result.append(<span class="string">","</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            result.append(string);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="感触"><a href="#感触" class="headerlink" title="感触"></a>感触</h2><p>以上就是发送短信代码，这里主要是参考网上的各种去写，第一次接触这种访问接口，记录一下，便于以后学习，<br>我的个人理解就是使用Http请求，然后拼接参数，请求成功后，返回一些信息。就能完成调用接口的操作。<br>还有个就是MD5加密方式，直接复制网上的，你也可以根据自己实际需求，编写或者查询一些工具</p><h1 id="MD5加密"><a href="#MD5加密" class="headerlink" title="MD5加密"></a>MD5加密</h1><p>具体代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wycfight@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: MD5 32位 小写加密</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-06-27 09:39</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@modified</span> By:</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MD5Util</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密算法</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> text  需要加密的字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encode</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MessageDigest digest = MessageDigest.getInstance(<span class="string">"md5"</span>);</span><br><span class="line">            <span class="keyword">byte</span>[] result = digest.digest(text.getBytes());</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">byte</span> b : result) &#123;</span><br><span class="line">                <span class="keyword">int</span> number = b &amp; <span class="number">0xff</span>;</span><br><span class="line">                String hex = Integer.toHexString(number);</span><br><span class="line">                <span class="keyword">if</span> (hex.length() == <span class="number">1</span>) &#123;</span><br><span class="line">                    sb.append(<span class="string">"0"</span> + hex);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sb.append(hex);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 加密 32 位 小写加密</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  &#123;[type]&#125; String value         需要加密的字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;[type]&#125;        返回的字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">md5</span><span class="params">(String value)</span></span>&#123;</span><br><span class="line">        String result = <span class="keyword">null</span>;</span><br><span class="line">        MessageDigest md5 = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            md5 = MessageDigest.getInstance(<span class="string">"MD5"</span>);</span><br><span class="line">            md5.update((value).getBytes(<span class="string">"UTF-8"</span>));</span><br><span class="line">        &#125;<span class="keyword">catch</span> (NoSuchAlgorithmException error)&#123;</span><br><span class="line">            error.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (UnsupportedEncodingException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span> b[] = md5.digest();</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        StringBuffer buf = <span class="keyword">new</span> StringBuffer(<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> offset=<span class="number">0</span>; offset&lt;b.length; offset++)&#123;</span><br><span class="line">            i = b[offset];</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                i+=<span class="number">256</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">16</span>)&#123;</span><br><span class="line">                buf.append(<span class="string">"0"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            buf.append(Integer.toHexString(i));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = buf.toString();</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="POM文件"><a href="#POM文件" class="headerlink" title="POM文件"></a>POM文件</h1><p>以及需要的一些jar包，pom文件配置如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- httpclientjar包 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;commons-httpclient&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;commons-httpclient&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;3.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- https:<span class="comment">//mvnrepository.com/artifact/commons-codec/commons-codec --&gt;</span></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;commons-codec&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;commons-codec&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.10&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;httpclient&lt;/artifactId&gt;</span><br><span class="line">          &lt;version&gt;4.5.3&lt;/version&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br><span class="line">      &lt;!-- 阿里巴巴json工具类 --&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.2.40&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>搬运参考来自：<a href="https://www.cnblogs.com/mengrennwpu/p/6418114.html" target="_blank" rel="noopener">https://www.cnblogs.com/mengrennwpu/p/6418114.html</a> Java使用HttpClient实现Post请求<br><a href="https://www.cnblogs.com/hunt/p/7071053.html" target="_blank" rel="noopener">https://www.cnblogs.com/hunt/p/7071053.html</a> NameValuePair方式传参数<br><a href="https://www.cnblogs.com/shuilangyizu/p/5844566.html" target="_blank" rel="noopener">https://www.cnblogs.com/shuilangyizu/p/5844566.html</a> java实现发送短信<br><a href="https://blog.csdn.net/u010256388/article/details/68491509" target="_blank" rel="noopener">https://blog.csdn.net/u010256388/article/details/68491509</a> HTTP请求行、请求头、请求体详解<br><a href="https://blog.csdn.net/jonatha_n/article/details/52217392" target="_blank" rel="noopener">https://blog.csdn.net/jonatha_n/article/details/52217392</a> MD5 32位 小写加密和大写加密<br><a href="https://blog.csdn.net/u012965373/article/details/79195592" target="_blank" rel="noopener">https://blog.csdn.net/u012965373/article/details/79195592</a> Java 实现对字符串MD5值加密32位大写小写<br><a href="https://blog.csdn.net/cat_book_milk/article/details/52954618" target="_blank" rel="noopener">https://blog.csdn.net/cat_book_milk/article/details/52954618</a> java MD5加密（大、小写32位）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用中国移动接口，用Http请求，进行发送短信&lt;br&gt;
    
    </summary>
    
    
      <category term="HttpClient" scheme="http://yoursite.com/tags/HttpClient/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot 项目部署到tomcat容器中</title>
    <link href="http://yoursite.com/2018/06/22/Spring-boot-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E5%88%B0tomcat%E5%AE%B9%E5%99%A8%E4%B8%AD/"/>
    <id>http://yoursite.com/2018/06/22/Spring-boot-项目部署到tomcat容器中/</id>
    <published>2018-06-22T00:44:34.000Z</published>
    <updated>2018-06-27T23:39:22.370Z</updated>
    
    <content type="html"><![CDATA[<p>把spring-boot项目按照平常的web项目一样发布到tomcat容器下<br><a id="more"></a></p><h1 id="一、修改打包形式"><a href="#一、修改打包形式" class="headerlink" title="一、修改打包形式"></a>一、修改打包形式</h1><p>在pom.xml里设置 <font color="red"><packaging>war</packaging></font><br><img src="/images/springbootpom.png" alt="SpringBoot中POM文件"></p><h1 id="二、移除嵌入式tomcat插件"><a href="#二、移除嵌入式tomcat插件" class="headerlink" title="二、移除嵌入式tomcat插件"></a>二、移除嵌入式tomcat插件</h1><p>在pom.xml里找到<font color="red">spring-boot-starter-web</font>依赖节点，在其中添加如下代码，<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">    &lt;!-- 移除嵌入式tomcat插件 --&gt;</span><br><span class="line">    &lt;exclusions&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">    &lt;/exclusions&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p><img src="/images/springbootpom1.png" alt="SpringBoot中POM文件"></p><h1 id="三、添加servlet-api的依赖"><a href="#三、添加servlet-api的依赖" class="headerlink" title="三、添加servlet-api的依赖"></a>三、添加servlet-api的依赖</h1><p>下面两种方式都可以，任选其一<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.1.0&lt;/version&gt;</span><br><span class="line">    &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;tomcat-servlet-api&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;8.0.36&lt;/version&gt;</span><br><span class="line">    &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/springbootpom2.png" alt="SpringBoot中POM文件"></p><h1 id="四、修改启动类，并重写初始化方法"><a href="#四、修改启动类，并重写初始化方法" class="headerlink" title="四、修改启动类，并重写初始化方法"></a>四、修改启动类，并重写初始化方法</h1><p>我们平常用main方法启动的方式，都有一个App的启动类，代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们需要类似于web.xml的配置方式来启动spring上下文了，在Application类的同级添加一个SpringBootStartApplication类，其代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改启动类，继承 SpringBootServletInitializer 并重写 configure 方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootStartApplication</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> SpringApplicationBuilder <span class="title">configure</span><span class="params">(SpringApplicationBuilder builder)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 注意这里要指向原先用main方法执行的Application启动类</span></span><br><span class="line">        <span class="keyword">return</span> builder.sources(Application.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/images/springbootjava.png" alt="SpringBoot中Java文件"></p><h1 id="五、打包部署"><a href="#五、打包部署" class="headerlink" title="五、打包部署"></a>五、打包部署</h1><p>在项目根目录下（即包含pom.xml的目录），在命令行里输入： </p><p><font color="red">mvn clean package</font>即可， 等待打包完成，出现<font color="red">[INFO] BUILD SUCCESS?</font>即为打包成功。<br>然后把target目录下的war包放到tomcat的webapps目录下，启动tomcat，即可自动解压部署。<br>最后在浏览器中输入</p><p><font color="red"><a href="http://localhost:[端口号]/[打包项目名]/" target="_blank" rel="noopener">http://localhost:[端口号]/[打包项目名]/</a><font></font></font></p><p>发布成功</p><p>搬运来自：<a href="https://blog.csdn.net/javahighness/article/details/52515226" target="_blank" rel="noopener">https://blog.csdn.net/javahighness/article/details/52515226</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把spring-boot项目按照平常的web项目一样发布到tomcat容器下&lt;br&gt;
    
    </summary>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>从零学习—MySQL</title>
    <link href="http://yoursite.com/2018/06/10/%E4%BB%8E%E9%9B%B6%E5%AD%A6%E4%B9%A0%E2%80%94MySQL/"/>
    <id>http://yoursite.com/2018/06/10/从零学习—MySQL/</id>
    <published>2018-06-10T02:06:53.000Z</published>
    <updated>2018-06-27T23:43:45.877Z</updated>
    
    <content type="html"><![CDATA[<p>记录自己一步一步学习MySQL的过程。之前一点不懂，现在想学习一下，所有的文章都是搬运其他人的Blog。感谢他们。<br><a id="more"></a></p><h1 id="Union和Union-All的区别"><a href="#Union和Union-All的区别" class="headerlink" title="Union和Union All的区别"></a>Union和Union All的区别</h1><p>首先有一个表是Student，包括以下字段。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> student;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student  </span><br><span class="line">(  </span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,  </span><br><span class="line"><span class="keyword">name</span> <span class="keyword">nvarchar2</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span>,  </span><br><span class="line">score <span class="built_in">number</span> <span class="keyword">not</span> <span class="literal">null</span>  </span><br><span class="line">);  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">'Aaron'</span>,<span class="number">78</span>);  </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">2</span>,<span class="string">'Bill'</span>,<span class="number">76</span>);  </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">3</span>,<span class="string">'Cindy'</span>,<span class="number">89</span>);  </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">4</span>,<span class="string">'Damon'</span>,<span class="number">90</span>);  </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'Ella'</span>,<span class="number">73</span>);  </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">6</span>,<span class="string">'Frado'</span>,<span class="number">61</span>);  </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">7</span>,<span class="string">'Gill'</span>,<span class="number">99</span>);  </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">8</span>,<span class="string">'Hellen'</span>,<span class="number">56</span>);  </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">9</span>,<span class="string">'Ivan'</span>,<span class="number">93</span>);  </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">10</span>,<span class="string">'Jay'</span>,<span class="number">90</span>);  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure></p><p>首先，我们来看一下UNION的例子：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select *  </span><br><span class="line">  2  from student  </span><br><span class="line">  3  where id&lt;4  </span><br><span class="line">  4  union  </span><br><span class="line">  5  <span class="keyword">select</span> *  </span><br><span class="line">  <span class="number">6</span>  <span class="keyword">from</span> student  </span><br><span class="line">  <span class="number">7</span>  <span class="keyword">where</span> <span class="keyword">id</span>&gt;<span class="number">2</span> <span class="keyword">and</span> <span class="keyword">id</span>&lt;<span class="number">6</span>  </span><br><span class="line">  <span class="number">8</span>  ;  </span><br><span class="line">  </span><br><span class="line">        ID NAME                                SCORE  </span><br><span class="line"><span class="comment">---------- ------------------------------ ----------  </span></span><br><span class="line">         1 Aaron                                  78  </span><br><span class="line">         2 Bill                                   76  </span><br><span class="line">         3 Cindy                                  89  </span><br><span class="line">         4 Damon                                  90  </span><br><span class="line">         5 Ella                                   73  </span><br><span class="line">  </span><br><span class="line">SQL&gt;</span><br></pre></td></tr></table></figure></p><p>如果换成Union All连接两个结果集，则结果如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select *  </span><br><span class="line">  2  from student  </span><br><span class="line">  3  where id&lt;4  </span><br><span class="line">  4  union all  </span><br><span class="line">  5  <span class="keyword">select</span> *  </span><br><span class="line">  <span class="number">6</span>  <span class="keyword">from</span> student  </span><br><span class="line">  <span class="number">7</span>  <span class="keyword">where</span> <span class="keyword">id</span>&gt;<span class="number">2</span> <span class="keyword">and</span> <span class="keyword">id</span>&lt;<span class="number">6</span>  </span><br><span class="line">  <span class="number">8</span>  ;  </span><br><span class="line">  </span><br><span class="line">        ID NAME                                SCORE  </span><br><span class="line"><span class="comment">---------- ------------------------------ ----------  </span></span><br><span class="line">         1 Aaron                                  78  </span><br><span class="line">         2 Bill                                   76  </span><br><span class="line">         3 Cindy                                  89  </span><br><span class="line">         3 Cindy                                  89  </span><br><span class="line">         4 Damon                                  90  </span><br><span class="line">         5 Ella                                   73  </span><br><span class="line">  </span><br><span class="line">6 rows selected.</span><br></pre></td></tr></table></figure></p><p>可以看到，<font color="red">Union和Union All的区别之一在于对重复结果的处理。</font><br>接下来，我们交换一个两个SELECT语句的顺序，看看结果是怎样的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select *  </span><br><span class="line">  2  from student  </span><br><span class="line">  3  where id&gt;2 and id&lt;6  </span><br><span class="line">  4  union  </span><br><span class="line">  5  select *  </span><br><span class="line">  6  from student  </span><br><span class="line">  7  where id&lt;4  </span><br><span class="line">  8  ;  </span><br><span class="line">  </span><br><span class="line">        ID NAME                                SCORE  </span><br><span class="line">---------- ------------------------------ ----------  </span><br><span class="line">         1 Aaron                                  78  </span><br><span class="line">         2 Bill                                   76  </span><br><span class="line">         3 Cindy                                  89  </span><br><span class="line">         4 Damon                                  90  </span><br><span class="line">         5 Ella                                   73  </span><br><span class="line">  </span><br><span class="line">SQL&gt; select *  </span><br><span class="line">  2  from student  </span><br><span class="line">  3  where id&gt;2 and id&lt;6  </span><br><span class="line">  4  union all  </span><br><span class="line">  5  select *  </span><br><span class="line">  6  from student  </span><br><span class="line">  7  where id&lt;4  </span><br><span class="line">  8  ;  </span><br><span class="line">  </span><br><span class="line">        ID NAME                                SCORE  </span><br><span class="line">---------- ------------------------------ ----------  </span><br><span class="line">         3 Cindy                                  89  </span><br><span class="line">         4 Damon                                  90  </span><br><span class="line">         5 Ella                                   73  </span><br><span class="line">         1 Aaron                                  78  </span><br><span class="line">         2 Bill                                   76  </span><br><span class="line">         3 Cindy                                  89  </span><br><span class="line">  </span><br><span class="line">6 rows selected.</span><br></pre></td></tr></table></figure></p><p>可以看到，对于UNION来说，交换两个SELECT语句的顺序后结果仍然是一样的，这是因为UNION会自动排序。而UNION ALL在交换了SELECT语句的顺序后结果则不相同，因为UNION ALL不会对结果自动进行排序。</p><p>那么这个自动排序的规则是什么呢？我们交换一下SELECT后面选择字段的顺序（前面使用SELECT *相当于SELECT ID,NAME,SCORE），看看结果如何：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select score,id,name  </span><br><span class="line">  2  from student  </span><br><span class="line">  3  where id&lt;4  </span><br><span class="line">  4  union  </span><br><span class="line">  5  select score,id,name  </span><br><span class="line">  6  from student  </span><br><span class="line">  7  where id&gt;2 and id&lt;6  </span><br><span class="line">  8  ;  </span><br><span class="line">  </span><br><span class="line">     SCORE         ID NAME  </span><br><span class="line">---------- ---------- ------------------------------  </span><br><span class="line">        73          5 Ella  </span><br><span class="line">        76          2 Bill  </span><br><span class="line">        78          1 Aaron  </span><br><span class="line">        89          3 Cindy  </span><br><span class="line">        90          4 Damon</span><br></pre></td></tr></table></figure></p><p>可是看到，此时是按照字段SCORE来对结果进行排序的（前面SELECT *的时候是按照ID进行排序的）。<br>那么有人会问，如果我想自行控制排序，能不能使用ORDER BY呢？当然可以。不过在写法上有需要注意的地方：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">select score,id,name  </span><br><span class="line">from student  </span><br><span class="line">where id &gt; 2 and id &lt; 7  </span><br><span class="line">  </span><br><span class="line">union  </span><br><span class="line">  </span><br><span class="line">select score,id,name  </span><br><span class="line">from student  </span><br><span class="line">where id &lt; 4  </span><br><span class="line">  </span><br><span class="line">union  </span><br><span class="line">  </span><br><span class="line">select score,id,name  </span><br><span class="line">from student  </span><br><span class="line">where id &gt; 8  </span><br><span class="line">order by id desc</span><br></pre></td></tr></table></figure></p><p>order by子句必须写在最后一个结果集里，并且其排序规则将改变操作后的排序结果。对于Union、Union All、Intersect、Minus都有效。</p><p>其他的集合操作符，如Intersect和Minus的操作和Union基本一致，这里一起总结一下：</p><p>Union，对两个结果集进行并集操作，不包括重复行，同时进行默认规则的排序；</p><p>Union All，对两个结果集进行并集操作，包括重复行，不进行排序；</p><p>Intersect，对两个结果集进行交集操作，不包括重复行，同时进行默认规则的排序；</p><p>Minus，对两个结果集进行差操作，不包括重复行，同时进行默认规则的排序。</p><p>可以在最后一个结果集中指定Order by子句改变排序方式。</p><h1 id="Mysql中TO-DAYS函数"><a href="#Mysql中TO-DAYS函数" class="headerlink" title="Mysql中TO_DAYS函数"></a>Mysql中TO_DAYS函数</h1><p>SQL博大精深</p><p>TO_DAYS函数 返回一个天数! 啊哈？什么天数? 从年份0开始的天数 </p><p>比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT TO_DAYS(‘1997-10-07′);</span><br></pre></td></tr></table></figure></p><p>结果  729669<br>就是从0年开始 到1997年10月7号之间的天数</p><p>理解这个之后那么一切就变得拉么简单！有一张表！lito表 有一个字段 create_time  类型 datetime  </p><p>如果要查询当前表中昨天的数据那么<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from lito where to_days(now())-to_days(create_time)&lt;1</span><br></pre></td></tr></table></figure></p><p>前天的?那就是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from lito where to_days(now())-to_days(create_time)&lt;2 and to_days(now())-to_days(create_time)&gt;1</span><br></pre></td></tr></table></figure></p><p>搬运来自：<a href="https://blog.csdn.net/sinat_19569023/article/details/50417273" target="_blank" rel="noopener">https://blog.csdn.net/sinat_19569023/article/details/50417273</a>   Mysql中TO_DAYS函数<br>          <a href="https://blog.csdn.net/wanghai__/article/details/4712555/" target="_blank" rel="noopener">https://blog.csdn.net/wanghai__/article/details/4712555/</a>          Union和Union All的区别</p><h1 id="Mysql数据库If语句的使用"><a href="#Mysql数据库If语句的使用" class="headerlink" title="Mysql数据库If语句的使用"></a>Mysql数据库If语句的使用</h1><p>MySQL的if既可以作为表达式用，也可在存储过程中作为流程控制语句使用，如下是做为表达式使用：<br>IF表达式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF(expr1,expr2,expr3)</span><br></pre></td></tr></table></figure></p><p>如果 expr1 是TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL)，则 IF()的返回值为expr2; 否则返回值则为 expr3。IF() 的返回值为数字值或字符串值，具体情况视其所在语境而定。<br>IFNULL(expr1,expr2)<br>假如expr1 不为 NULL，则 IFNULL() 的返回值为 expr1; 否则其返回值为 expr2。IFNULL()的返回值是数字或是字符串，具体情况取决于其所使用的语境。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT IFNULL(1,0);  </span><br><span class="line">        -&gt; 1  </span><br><span class="line">mysql&gt; SELECT IFNULL(NULL,10);  </span><br><span class="line">        -&gt; 10  </span><br><span class="line">mysql&gt; SELECT IFNULL(1/0,10);  </span><br><span class="line">        -&gt; 10  </span><br><span class="line">mysql&gt; SELECT IFNULL(1/0,&apos;yes&apos;);  </span><br><span class="line">        -&gt; &apos;yes&apos;</span><br></pre></td></tr></table></figure></p><p>IFNULL(expr1,expr2) 的默认结果值为两个表达式中更加“通用”的一个，顺序为STRING、 REAL或 INTEGER。<br>IF ELSE 做为流程控制语句使用<br>if实现条件判断，满足不同条件执行不同的操作，这个我们只要学编程的都知道if的作用了，下面我们来看看mysql 存储过程中的if是如何使用的吧。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IF search_condition THEN   </span><br><span class="line">    statement_list    </span><br><span class="line">[ELSEIF search_condition THEN]    </span><br><span class="line">    statement_list ...    </span><br><span class="line">[ELSE   </span><br><span class="line">    statement_list]    </span><br><span class="line">END IF</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录自己一步一步学习MySQL的过程。之前一点不懂，现在想学习一下，所有的文章都是搬运其他人的Blog。感谢他们。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java从零开始—反射  2018-06-01</title>
    <link href="http://yoursite.com/2018/06/01/Java%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E2%80%94%E5%8F%8D%E5%B0%84-2018-06-01/"/>
    <id>http://yoursite.com/2018/06/01/Java从零开始—反射-2018-06-01/</id>
    <published>2018-05-31T23:02:10.000Z</published>
    <updated>2018-07-21T02:18:00.409Z</updated>
    
    <content type="html"><![CDATA[<p>从这篇文章之后，记录自己从零开始学习Java基础。时光是美好的，我们应该去尽情地去享受。<br>改变，永远不嫌晚，就怕你不去改变，而在原地踏步。以后写的文章，都是参考网上资料。会写明出处<br>这篇文章主要是反射，写文章的目的，主要是供自己方便查看。也会给别人带来方便。<br><a id="more"></a></p><p><font color="red" face="黑体" size="5">反射是框架设计的灵魂</font><br>    <font color="red" size="3">（使用的前提条件：必须先得到代表的字节码的Class，Class类用于表示.class文件（字节码））</font></p><h1 id="一、反射的概述"><a href="#一、反射的概述" class="headerlink" title="一、反射的概述"></a>一、反射的概述</h1><p>JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。<br>要想解剖一个类,必须先要获取到该类的字节码文件对象。而解剖使用的就是Class类中的方法.所以先要获取到每一个字节码文件对应的Class类型的对象.</p><p>以上的总结就是什么是反射</p><p><font color="red" face="黑体" size="4">反射就是把java类中的各种成分映射成一个个的Java对象</font><br>例如：一个类有：成员变量、方法、构造方法、包等等信息，利用反射技术可以对一个类进行解剖，把个个组成部分映射成一个个对象。<br>     （其实：一个类中这些成员方法、构造方法、在加入类中都有一个类来描述）<br>如图是类的正常加载过程：反射的原理在与class对象。<br>熟悉一下加载的时候：Class对象的由来是将class文件读入内存，并为之创建一个Class对象。<br><img src="/images/reflection.png" alt="反射原理图"><br>其中这个Class对象很特殊。我们先了解一下这个Class类</p><h1 id="二、查看Class类在java中的api详解（1-6的API）"><a href="#二、查看Class类在java中的api详解（1-6的API）" class="headerlink" title="二、查看Class类在java中的api详解（1.6的API）"></a>二、查看Class类在java中的api详解（1.6的API）</h1><p><img src="/images/jdkapi.png" alt="jdkClass&lt;T&gt;对象"><br>    <font color="red">Class</font> 类的实例表示正在运行的 Java 应用程序中的类和接口。也就是jvm中有N多的实例每个类都有该<font color="red">Class</font>对象。（包括基本数据类型）<br>Class 没有公共构造方法。<font color="red">Class</font> 对象是在加载类时由 Java 虚拟机以及通过调用类加载器中的<font color="red">defineClass </font> 方法自动构造的。也就是这不需要我们自己去处理创建，JVM已经帮我们创建好了。</p><p>没有公共的构造方法，方法共有64个太多了。下面用到哪个就详解哪个吧<br><img src="/images/jdkmethod.png" alt="jdkClass&lt;T&gt;对象"> </p><h1 id="三、反射的使用-这里使用Student类做演示"><a href="#三、反射的使用-这里使用Student类做演示" class="headerlink" title="三、反射的使用(这里使用Student类做演示)"></a>三、反射的使用(这里使用Student类做演示)</h1><p>先编写Student类</p><h2 id="1、-获取Class对象的三种方式"><a href="#1、-获取Class对象的三种方式" class="headerlink" title="1、 获取Class对象的三种方式"></a>1、 获取Class对象的三种方式</h2><p>1.1 Object ——&gt; getClass();<br>1.2 任何数据类型（包括基本数据类型）都有一个“静态”的class属性<br>1.3 通过Class类的静态方法：forName（String  className）(常用)</p><p>其中1.1是因为Object类中的getClass方法、因为所有类都继承Object类。从而调用Object类来获取<br><img src="/images/jdkgetclass.png" alt="jdkClass&lt;T&gt;对象"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">package top.wycfight.study;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @Author: wycfight@163.com</span><br><span class="line"> * @Description: Java基础-反射</span><br><span class="line"> *   获取Class对象的三种方式</span><br><span class="line"> *   1. Object ——&gt; getClass();</span><br><span class="line"> *   2. 任何数据类型 (包括基本数据类型) 都有一个<span class="string">"静态"</span>的class属性</span><br><span class="line"> *   3. 通过Class类的静态方法： forName(String className)(常用)</span><br><span class="line"> * @Date: Created <span class="keyword">in</span> 6:43 2018/6/1</span><br><span class="line"> * @Modified By:</span><br><span class="line"> */</span><br><span class="line">public class Reflection &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        // 第一种方式获取 new 会残生一个Student对象 和Class对象</span><br><span class="line">        Student student = new Student();</span><br><span class="line">        Class stuClass = student.getClass();</span><br><span class="line">        System.out.println(stuClass.getName());</span><br><span class="line"></span><br><span class="line">        // 第二种方式获取 class 对象</span><br><span class="line">        Class stuClass2 = Student.class;</span><br><span class="line">        // 判断两种方式获取到的Class对象是否是同一个</span><br><span class="line">        System.out.println(stuClass2.equals(stuClass));</span><br><span class="line"></span><br><span class="line">        // 第三种方式获取 （常用）</span><br><span class="line">        try &#123;</span><br><span class="line">            // forName 必须使用 包名.类名的形式</span><br><span class="line">            Class stuClass3  = Class.forName(<span class="string">"top.wycfight.study.Student"</span>);</span><br><span class="line">            // 判断三种获取的是否是通过一个对象</span><br><span class="line">            System.out.println(stuClass3 == stuClass2);</span><br><span class="line">        &#125; catch (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><font size="4">注意：在运行期间，一个类，只有一个Class对象产生。</font><br>三种方式常用第三种，第一种对象都有了还要反射干什么。第二种需要导入类的包，依赖太强，不导包就抛编译错误。一般都第三种，一个字符串可以传入也可写在配置文件中等多种方法。</p><p>搬运来自：    <a href="https://blog.csdn.net/sinat_38259539/article/details/71799078" target="_blank" rel="noopener">https://blog.csdn.net/sinat_38259539/article/details/71799078</a>  Java基础之—反射（非常重要）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从这篇文章之后，记录自己从零开始学习Java基础。时光是美好的，我们应该去尽情地去享受。&lt;br&gt;改变，永远不嫌晚，就怕你不去改变，而在原地踏步。以后写的文章，都是参考网上资料。会写明出处&lt;br&gt;这篇文章主要是反射，写文章的目的，主要是供自己方便查看。也会给别人带来方便。&lt;br&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>模板导出Excel;</title>
    <link href="http://yoursite.com/2018/05/30/%E6%A8%A1%E6%9D%BF%E5%AF%BC%E5%87%BAExcel/"/>
    <id>http://yoursite.com/2018/05/30/模板导出Excel/</id>
    <published>2018-05-29T22:38:03.000Z</published>
    <updated>2018-05-29T23:10:53.702Z</updated>
    
    <content type="html"><![CDATA[<p>导出Excel非常常见，因为在一些管理系统中，需要导出的东西非常多。<br>之前用的导出都是普通导出，并没有用到模板。后来看到能将html页面中的table<br>转成Excel就觉得非常厉害。本文主要讲解的是用模板进行导出Excel。<br><a id="more"></a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>下载有关pom文件的jar包。如果是Maven项目，配置如下。<br>pom.xml<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi&lt;/artifactId&gt;</span><br><span class="line">     &lt;version&gt;3.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>首先在项目某个目录下放入模板，因为需要将模板信息读出来，这里我在<br><img src="/images/model.png" alt="模板存放位置"><br>模板导出Excel思路，主要是创建文件输入流对象，根据模板创建工作簿，因为之前都是setXXX<br>现在改成了getXXX，具体实现代码如下。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> XSSFWorkbook <span class="title">exportTemplate</span><span class="params">(String shipTime, List&lt;ContractProduct&gt; contractProductList)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取当前日期并格式化</span></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM"</span>);</span><br><span class="line">        String nowTime = sdf.format(date);</span><br><span class="line">        <span class="comment">// 通用变量</span></span><br><span class="line">        <span class="keyword">int</span> rowNo = <span class="number">0</span>,cellNo = <span class="number">1</span>;</span><br><span class="line">        Row row = <span class="keyword">null</span>;</span><br><span class="line">        Cell cell = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 根据相对路径找绝对路径</span></span><br><span class="line">        String path = <span class="string">"D:\\IdeaProject\\employee-manager\\web\\resources\\make\\tOUTPRODUCT.xls"</span>;</span><br><span class="line">        <span class="comment">//  创建工作簿</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建文件的输入流对象</span></span><br><span class="line">            InputStream is = <span class="keyword">new</span> FileInputStream(path);</span><br><span class="line">            XSSFWorkbook workbook = <span class="keyword">new</span> XSSFWorkbook(is);</span><br><span class="line">            <span class="comment">// 读取工作表</span></span><br><span class="line">            Sheet sheet = workbook.getSheetAt(<span class="number">0</span>);</span><br><span class="line">            row = sheet.getRow(rowNo++);</span><br><span class="line">            row.getCell(cellNo);</span><br><span class="line">            cell.setCellValue(shipTime.replace(<span class="string">"-0"</span>,<span class="string">"年"</span>).replace(<span class="string">"-"</span>,<span class="string">"年"</span>)+<span class="string">"月份出货表"</span>);</span><br><span class="line">            <span class="comment">// 小标题 跳过第二行</span></span><br><span class="line">            rowNo++;</span><br><span class="line">            <span class="comment">// 读取第三行</span></span><br><span class="line">            row = sheet.getRow(rowNo);</span><br><span class="line">            <span class="comment">//获取每个单元格的样式</span></span><br><span class="line">            CellStyle customCellStyle = row.getCell(cellNo++).getCellStyle();</span><br><span class="line">            CellStyle orderNoCellStyle = row.getCell(cellNo++).getCellStyle();</span><br><span class="line">            CellStyle productNoCellStyle = row.getCell(cellNo++).getCellStyle();</span><br><span class="line">            CellStyle CellStyle = row.getCell(cellNo++).getCellStyle();</span><br><span class="line">            CellStyle cNumbercustomCellStyle = row.getCell(cellNo++).getCellStyle();</span><br><span class="line">            CellStyle factoryCellStyle = row.getCell(cellNo++).getCellStyle();</span><br><span class="line">            CellStyle deliveryCellStyle = row.getCell(cellNo++).getCellStyle();</span><br><span class="line">            CellStyle shipTimeCellStyle = row.getCell(cellNo++).getCellStyle();</span><br><span class="line">            CellStyle tradeTermsCellStyle = row.getCell(cellNo++).getCellStyle();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>以上就是模板打印方法，下面介绍下workBook接口中的实现类。</p><p>###区别：<br>用JavaPOI导出Excel时，我们会考虑到Excel版本及数据量的问题。针对不同的Excel版本，要采用不同的工具类。</p><p>HSSFWorkbook:是操作Excel2003以前（包括2003）的版本，扩展名是.xls；</p><p>XSSFWorkbook:是操作Excel2007的版本，扩展名是.xlsx；</p><p>对于不同版本的EXCEL文档要使用不同的工具类，如果使用错了，会提示如下错误信息。</p><p>org.apache.poi.openxml4j.exceptions.InvalidOperationException</p><p>org.apache.poi.poifs.filesystem.OfficeXmlFileException</p><p>从POI 3.8版本开始，提供了一种基于XSSF的低内存占用的API—-SXSSF</p><p>当数据量超出65536条后，在使用HSSFWorkbook或XSSFWorkbook，程序会报OutOfMemoryError：Javaheap space;内存溢出错误。这时应该用SXSSFworkbook。</p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>针对 SXSSF Beta 3.8下，会有临时文件产生，比如：<br>poi-sxssf-sheet4654655121378979321.xml<br>文件位置：java.io.tmpdir这个环境变量下的位置<br>Windows 7下是C:\Users\xxxxxAppData\Local\Temp<br>Linux下是 /var/tmp/<br>要根据实际情况，看是否删除这些临时文件</p><p>与XSSF的对比<br>在一个时间点上，只可以访问一定数量的数据<br>不再支持Sheet.clone()<br>不再支持公式的求值</p><p>在使用Excel模板下载数据时将不能动态改变表头，因为这种方式已经提前把excel写到硬盘的了就不能再改了</p><h3 id="简单定义"><a href="#简单定义" class="headerlink" title="简单定义"></a>简单定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">input = classPathResource.getInputStream();</span><br><span class="line">           input = classPathResource.getInputStream();</span><br><span class="line">            Workbook wb = <span class="keyword">null</span>;</span><br><span class="line">            HSSFWorkbook hwb=<span class="keyword">null</span>;</span><br><span class="line">            XSSFWorkbook xwb=<span class="keyword">null</span>;</span><br><span class="line">            SXSSFWorkbook swb = <span class="keyword">null</span>;</span><br><span class="line">            Sheet sh = <span class="keyword">null</span>;</span><br><span class="line">            wb = WorkbookFactory.create(input);</span><br><span class="line">            hwb = (HSSFWorkbook) WorkbookFactory.create(input);</span><br><span class="line">            xwb = (XSSFWorkbook) WorkbookFactory.create(input);</span><br><span class="line">            swb = <span class="keyword">new</span> SXSSFWorkbook(xwb,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;导出Excel非常常见，因为在一些管理系统中，需要导出的东西非常多。&lt;br&gt;之前用的导出都是普通导出，并没有用到模板。后来看到能将html页面中的table&lt;br&gt;转成Excel就觉得非常厉害。本文主要讲解的是用模板进行导出Excel。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java 使用 jacob 将微软office中 word excel ppt转成pdf</title>
    <link href="http://yoursite.com/2018/05/24/Java-%E4%BD%BF%E7%94%A8-jacob-%E5%B0%86%E5%BE%AE%E8%BD%AFoffice%E4%B8%AD-word-excel-ppt-jpg%E8%BD%AC%E6%88%90pdf/"/>
    <id>http://yoursite.com/2018/05/24/Java-使用-jacob-将微软office中-word-excel-ppt-jpg转成pdf/</id>
    <published>2018-05-23T23:20:17.000Z</published>
    <updated>2018-05-28T23:09:00.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java-将-word-excel-ppt如何转pdf"><a href="#Java-将-word-excel-ppt如何转pdf" class="headerlink" title="Java 将 word,excel,ppt如何转pdf"></a>Java 将 word,excel,ppt如何转pdf</h2><p>首先：windows server下用 jacob; linux server下 用openoffice。<br>        1.<strong>本文中说的是windows server下用 jacob这一部分,之后说openoffice的解决方案。</strong><br>        2.<strong>本文中说的解决方案支持将doc,docx,xls,xlsx,ppt,pptx这些格式转成pdf。</strong><br>        3.<strong>jacob可以调用windows com组件，但不是不止这一种方案：可以搜“java调用com”，查看其它的解决方案</strong><br><a id="more"></a><br>本次用的主要是文件附件的预览，后来想到查阅资料说：要将一些office中word，excel，ppt转成pdf。<br>首先本机中必须安装Office软件，因为jacob需要借助Office软件转PDF。而且服务器是windows server。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先下载jacob.zip ,地址：<a href="https://sourceforge.net/projects/jacob-project/" target="_blank" rel="noopener">https://sourceforge.net/projects/jacob-project/</a><br>打开压缩包 64位系统就用 x64的dll，32位系统就用x86的dll。将dll文件放入放入jdk/bin目录下。<br>如果是Maven项目 将jar放到项目任意目录下 用maven引入就行。<br>下面是借鉴别人的工具类，具体代码如下。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yijia.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itextpdf.text.*;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.text.pdf.PdfWriter;</span><br><span class="line"><span class="keyword">import</span> com.jacob.activeX.ActiveXComponent;</span><br><span class="line"><span class="keyword">import</span> com.jacob.com.ComThread;</span><br><span class="line"><span class="keyword">import</span> com.jacob.com.Dispatch;</span><br><span class="line"><span class="keyword">import</span> com.jacob.com.Variant;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: wycfight@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: word excel ppt 转成pdf</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 8:41 2018/5/23</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@modified</span> By:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OfficeConverterUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将图片转成pdf</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imgFilePath 文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pdfFilePath 生成pdf图片的路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">imgToPdf</span><span class="params">(String imgFilePath, String pdfFilePath)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(imgFilePath);</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            Document document = <span class="keyword">new</span> Document();</span><br><span class="line">            FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fos = <span class="keyword">new</span> FileOutputStream(pdfFilePath);</span><br><span class="line">                PdfWriter.getInstance(document, fos);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 添加PDF文档的某些信息，比如作者，主题等等</span></span><br><span class="line">                document.addAuthor(<span class="string">"arui"</span>);</span><br><span class="line">                document.addSubject(<span class="string">"test pdf."</span>);</span><br><span class="line">                <span class="comment">// 设置文档的大小</span></span><br><span class="line">                document.setPageSize(PageSize.A4);</span><br><span class="line">                <span class="comment">// 打开文档</span></span><br><span class="line">                document.open();</span><br><span class="line">                <span class="comment">// 写入一段文字</span></span><br><span class="line">                <span class="comment">//document.add(new Paragraph("JUST TEST ..."));</span></span><br><span class="line">                <span class="comment">// 读取一个图片</span></span><br><span class="line">                Image image = Image.getInstance(imgFilePath);</span><br><span class="line">                <span class="keyword">float</span> imageHeight = image.getScaledHeight();</span><br><span class="line">                <span class="keyword">float</span> imageWidth = image.getScaledWidth();</span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (imageHeight &gt; <span class="number">500</span> || imageWidth &gt; <span class="number">500</span>) &#123;</span><br><span class="line">                    image.scalePercent(<span class="number">100</span> - i);</span><br><span class="line">                    i++;</span><br><span class="line">                    imageHeight = image.getScaledHeight();</span><br><span class="line">                    imageWidth = image.getScaledWidth();</span><br><span class="line">                    System.out.println(<span class="string">"imageHeight-&gt;"</span> + imageHeight);</span><br><span class="line">                    System.out.println(<span class="string">"imageWidth-&gt;"</span> + imageWidth);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                image.setAlignment(Image.ALIGN_CENTER);</span><br><span class="line"><span class="comment">//        //设置图片的绝对位置</span></span><br><span class="line">                <span class="comment">// image.setAbsolutePosition(0, 0);</span></span><br><span class="line">                <span class="comment">// image.scaleAbsolute(500, 400);</span></span><br><span class="line">                <span class="comment">// 插入一个图片</span></span><br><span class="line">                document.add(image);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (DocumentException de) &#123;</span><br><span class="line">                System.out.println(de.getMessage());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException ioe) &#123;</span><br><span class="line">                System.out.println(ioe.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            document.close();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fos.flush();</span><br><span class="line">                fos.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * wps 转成pdf</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputFile 目标文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pdfFile   pdf文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">wps2PDF</span><span class="params">(String inputFile, String pdfFile)</span> </span>&#123;</span><br><span class="line">        File sFile = <span class="keyword">new</span> File(inputFile);</span><br><span class="line">        File tFile = <span class="keyword">new</span> File(pdfFile);</span><br><span class="line">        ActiveXComponent wps = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ComThread.InitSTA();</span><br><span class="line">            wps = <span class="keyword">new</span> ActiveXComponent(<span class="string">"wps.application"</span>);</span><br><span class="line">            ActiveXComponent doc = wps.invokeGetComponent(<span class="string">"Documents"</span>).invokeGetComponent(<span class="string">"Open"</span>, <span class="keyword">new</span> Variant(sFile.getAbsolutePath()));</span><br><span class="line">            doc.invoke(<span class="string">"ExportPdf"</span>, <span class="keyword">new</span> Variant(tFile.getAbsolutePath()));</span><br><span class="line">            doc.invoke(<span class="string">"Close"</span>);</span><br><span class="line">            doc.safeRelease();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (wps != <span class="keyword">null</span>) &#123;</span><br><span class="line">                wps.invoke(<span class="string">"Terminate"</span>);</span><br><span class="line">                wps.safeRelease();</span><br><span class="line">            &#125;</span><br><span class="line">            ComThread.Release();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * log</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger = Logger.getLogger(OfficeConverterUtil.class);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WDFO_RMATPDF = <span class="number">17</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> XLTYPE_PDF = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PPT_SAVEAS_PDF = <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WORD_HTML = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> WORD_TXT = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> EXCEL_HTML = <span class="number">44</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PPT_SAVEAS_JPG = <span class="number">17</span>;</span><br><span class="line">    <span class="comment">// private static final int msoTrue = -1;</span></span><br><span class="line">    <span class="comment">// private static final int msofalse = 0;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文件类型 并转成pdf</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> argInputFilePath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> argPdfPath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">officeFileConverterToPdf</span><span class="params">(String argInputFilePath, String argPdfPath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (argInputFilePath.isEmpty() || argPdfPath.isEmpty() || getFileSufix(argInputFilePath).isEmpty()) &#123;</span><br><span class="line">            logger.debug(<span class="string">"输入或输出的文件路径有误！"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String suffix = getFileSufix(argInputFilePath);</span><br><span class="line"></span><br><span class="line">        File file = <span class="keyword">new</span> File(argInputFilePath);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            logger.debug(<span class="string">"文件不存在！"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// PDF如果不存在则创建文件夹</span></span><br><span class="line">        file = <span class="keyword">new</span> File(getFilePath(argPdfPath));</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            file.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果输入的路径为PDF 则生成失败</span></span><br><span class="line">        <span class="keyword">if</span> (suffix.equals(<span class="string">"pdf"</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">"PDF not need to convert!"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (suffix.equals(<span class="string">"doc"</span>) || suffix.equals(<span class="string">"docx"</span>) || suffix.equals(<span class="string">"txt"</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> wordToPDF(argInputFilePath, argPdfPath);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (suffix.equals(<span class="string">"xls"</span>) || suffix.equals(<span class="string">"xlsx"</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> excelToPdf(argInputFilePath, argPdfPath);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (suffix.equals(<span class="string">"ppt"</span>) || suffix.equals(<span class="string">"pptx"</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> pptToPdf(argInputFilePath, argPdfPath);</span><br><span class="line">            <span class="comment">// return ppt2PDF(argInputFilePath, argPdfPath);</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (suffix.equals(<span class="string">"jpg"</span>) || suffix.equals(<span class="string">"png"</span>) || suffix.equals(<span class="string">"jpeg"</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> imgToPdf(argInputFilePath, argPdfPath);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Word 转成PDF</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> wordPath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pdfPath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">wordToPDF</span><span class="params">(String wordPath, String pdfPath)</span> </span>&#123;</span><br><span class="line">        ActiveXComponent msWordApp = <span class="keyword">new</span> ActiveXComponent(<span class="string">"Word.Application"</span>);</span><br><span class="line">        msWordApp.setProperty(<span class="string">"Visible"</span>, <span class="keyword">new</span> Variant(<span class="keyword">false</span>));</span><br><span class="line"></span><br><span class="line">        Dispatch docs = Dispatch.get(msWordApp, <span class="string">"Documents"</span>).toDispatch();</span><br><span class="line">        <span class="comment">// long pdfStart = System.currentTimeMillis();</span></span><br><span class="line">        Dispatch doc = Dispatch.invoke(docs, <span class="string">"Open"</span>, Dispatch.Method, <span class="keyword">new</span> Object[]&#123;wordPath, <span class="keyword">new</span> Variant(<span class="keyword">false</span>), <span class="keyword">new</span> Variant(<span class="keyword">true</span>)&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>]).toDispatch();</span><br><span class="line"></span><br><span class="line">        deletePdf(pdfPath);</span><br><span class="line"></span><br><span class="line">        Dispatch.invoke(doc, <span class="string">"SaveAs"</span>, Dispatch.Method, <span class="keyword">new</span> Object[]&#123;pdfPath, <span class="keyword">new</span> Variant(WDFO_RMATPDF)&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="comment">// long pdfEnd = System.currentTimeMillis();</span></span><br><span class="line">        logger.debug(wordPath + <span class="string">",pdf转换完成.."</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != doc) &#123;</span><br><span class="line">            Dispatch.call(doc, <span class="string">"Close"</span>, <span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * excel 转成pdf</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputFile 文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pdfFile   目标文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">excelToPdf</span><span class="params">(String inputFile, String pdfFile)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"启动Excel"</span>);</span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        ActiveXComponent app = <span class="keyword">new</span> ActiveXComponent(<span class="string">"Excel.Application"</span>); <span class="comment">// 启动excel(Excel.Application)</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            app.setProperty(<span class="string">"Visible"</span>, <span class="keyword">false</span>);</span><br><span class="line">            Dispatch workbooks = app.getProperty(<span class="string">"Workbooks"</span>).toDispatch();</span><br><span class="line">            System.out.println(<span class="string">"打开文档"</span> + inputFile);</span><br><span class="line">            Dispatch workbook = Dispatch.invoke(workbooks, <span class="string">"Open"</span>, Dispatch.Method, <span class="keyword">new</span> Object[]&#123;inputFile, <span class="keyword">new</span> Variant(<span class="keyword">false</span>), <span class="keyword">new</span> Variant(<span class="keyword">false</span>)&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>]).toDispatch();</span><br><span class="line">            Dispatch.invoke(workbook, <span class="string">"SaveAs"</span>, Dispatch.Method, <span class="keyword">new</span> Object[]&#123;</span><br><span class="line">                    pdfFile, <span class="keyword">new</span> Variant(<span class="number">57</span>), <span class="keyword">new</span> Variant(<span class="keyword">false</span>),</span><br><span class="line">                    <span class="keyword">new</span> Variant(<span class="number">57</span>), <span class="keyword">new</span> Variant(<span class="number">57</span>), <span class="keyword">new</span> Variant(<span class="keyword">false</span>),</span><br><span class="line">                    <span class="keyword">new</span> Variant(<span class="keyword">true</span>), <span class="keyword">new</span> Variant(<span class="number">57</span>), <span class="keyword">new</span> Variant(<span class="keyword">true</span>),</span><br><span class="line">                    <span class="keyword">new</span> Variant(<span class="keyword">true</span>), <span class="keyword">new</span> Variant(<span class="keyword">true</span>)&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>]);</span><br><span class="line">            Variant f = <span class="keyword">new</span> Variant(<span class="keyword">false</span>);</span><br><span class="line">            System.out.println(<span class="string">"转换文档到PDF "</span> + pdfFile);</span><br><span class="line">            Dispatch.call(workbook, <span class="string">"Close"</span>, f);</span><br><span class="line">            <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">            System.out.println(<span class="string">"转换完成..用时："</span> + (end - start) + <span class="string">"ms."</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"========Error:文档转换失败："</span> + e.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (app != <span class="keyword">null</span>) &#123;</span><br><span class="line">                app.invoke(<span class="string">"Quit"</span>, <span class="keyword">new</span> Variant[]&#123;&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ppt 转成 pdf</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputFile</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pdfFile</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">pptToPdf</span><span class="params">(String inputFile, String pdfFile)</span> </span>&#123;</span><br><span class="line"><span class="comment">//      ComThread.InitSTA();</span></span><br><span class="line">        ActiveXComponent activeXComponent = <span class="keyword">new</span> ActiveXComponent(<span class="string">"PowerPoint.Application"</span>);</span><br><span class="line"><span class="comment">//      activeXComponent.setProperty("Visible", new Variant(false));</span></span><br><span class="line">        Dispatch ppts = activeXComponent.getProperty(<span class="string">"Presentations"</span>).toDispatch();</span><br><span class="line"></span><br><span class="line">        deletePdf(pdfFile);</span><br><span class="line"></span><br><span class="line">        Dispatch ppt = Dispatch.call(ppts, <span class="string">"Open"</span>, inputFile, <span class="keyword">false</span>, <span class="comment">// ReadOnly</span></span><br><span class="line">                <span class="keyword">true</span>, <span class="comment">// Untitled指定文件是否有标题</span></span><br><span class="line">                <span class="keyword">true</span><span class="comment">// WithWindow指定文件是否可见</span></span><br><span class="line">        ).toDispatch();</span><br><span class="line"></span><br><span class="line"><span class="comment">//      Dispatch ppt = Dispatch.invoke(ppts, "Open", Dispatch.Method, new Object[] &#123; inputFile, new Variant(false), new Variant(true) &#125;, new int[1]).toDispatch();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//      Dispatch.call(ppt, "SaveAs", pdfFile, PPT_SAVEAS_PDF);</span></span><br><span class="line"><span class="comment">//      Dispatch.call(ppt, "SaveAs", pdfFile, new Variant(PPT_SAVEAS_PDF));</span></span><br><span class="line"><span class="comment">//      Dispatch.call(ppt, "SaveAs", pdfFile, new Variant(PPT_SAVEAS_PDF));</span></span><br><span class="line"><span class="comment">//      Dispatch.invoke(ppt, "SaveAs", Dispatch.Method, new Object[] &#123; pdfFile, PPT_SAVEAS_PDF &#125;, new int[1]);</span></span><br><span class="line"><span class="comment">//      Dispatch.invoke(ppt, "SaveAs", Dispatch.Method, new Object[] &#123; new Variant(PPT_SAVEAS_PDF) &#125;, new int[1]);</span></span><br><span class="line">        Dispatch.callN(ppt, <span class="string">"SaveAs"</span>, <span class="keyword">new</span> Variant(pdfFile));</span><br><span class="line"></span><br><span class="line">        Dispatch.call(ppt, <span class="string">"Close"</span>);</span><br><span class="line"></span><br><span class="line">        activeXComponent.invoke(<span class="string">"Quit"</span>);</span><br><span class="line"><span class="comment">//      ComThread.Release();</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ppt to img</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputFile</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> imgFile</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">pptToImg</span><span class="params">(String inputFile, String imgFile)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 打开word应用程序</span></span><br><span class="line">        ActiveXComponent app = <span class="keyword">new</span> ActiveXComponent(<span class="string">"PowerPoint.Application"</span>);</span><br><span class="line">        <span class="comment">// 设置word不可见，office可能有限制</span></span><br><span class="line">        <span class="comment">// app.setProperty("Visible", false);</span></span><br><span class="line">        <span class="comment">// 获取word中所打开的文档，返回Documents对象</span></span><br><span class="line">        Dispatch files = app.getProperty(<span class="string">"Presentations"</span>).toDispatch();</span><br><span class="line">        <span class="comment">// 调用Documents对象中Open方法打开文档，并返回打开的文档对象Document</span></span><br><span class="line">        Dispatch file = Dispatch.call(files, <span class="string">"open"</span>, inputFile, <span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">false</span>).toDispatch();</span><br><span class="line">        <span class="comment">// 调用Document对象的SaveAs方法，将文档保存为pdf格式</span></span><br><span class="line">        <span class="comment">// Dispatch.call(doc, "ExportAsFixedFormat", outputFile,</span></span><br><span class="line">        <span class="comment">// PPT_TO_PDF);</span></span><br><span class="line">        Dispatch.call(file, <span class="string">"SaveAs"</span>, imgFile, PPT_SAVEAS_JPG);</span><br><span class="line">        <span class="comment">// 关闭文档</span></span><br><span class="line">        <span class="comment">// Dispatch.call(file, "Close", false);</span></span><br><span class="line">        Dispatch.call(file, <span class="string">"Close"</span>);</span><br><span class="line">        <span class="comment">// 关闭word应用程序</span></span><br><span class="line">        <span class="comment">// app.invoke("Quit", 0);</span></span><br><span class="line">        app.invoke(<span class="string">"Quit"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文件类型</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> argFilePath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFileSufix</span><span class="params">(String argFilePath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> splitIndex = argFilePath.lastIndexOf(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">return</span> argFilePath.substring(splitIndex + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到文件路径  如D：//1/2/3.txt  得到 D：//1//2/</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> argFilePath file path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> filePaths</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFilePath</span><span class="params">(String argFilePath)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 从文件路径  从右往左截取到文件的目录</span></span><br><span class="line">        <span class="keyword">int</span> pathIndex = argFilePath.lastIndexOf(<span class="string">"/"</span>);</span><br><span class="line">        <span class="keyword">return</span> argFilePath.substring(<span class="number">0</span>, pathIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果PDF存在则删除PDF</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pdfPath</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deletePdf</span><span class="params">(String pdfPath)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 将文件目录放入File中  如果存在将进行删除</span></span><br><span class="line">        File pdfFile = <span class="keyword">new</span> File(pdfPath);</span><br><span class="line">        <span class="keyword">if</span> (pdfFile.exists()) &#123;</span><br><span class="line">            pdfFile.delete();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取文件的名称</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath 文件路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFileName</span><span class="params">(String filePath)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(filePath);</span><br><span class="line">        String fileName = file.getName();</span><br><span class="line">        <span class="keyword">int</span> pathIndex = fileName.lastIndexOf(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">return</span> fileName.substring(<span class="number">0</span>, pathIndex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        String path = "D:/360Download/员工表.xls";</span></span><br><span class="line"><span class="comment">//        String filePath = OfficeConverterUtil.getFilePath(path);</span></span><br><span class="line"><span class="comment">//        String fileName = OfficeConverterUtil.getFileName(path);</span></span><br><span class="line"><span class="comment">//        OfficeConverterUtil.officeFileConverterToPdf(path,filePath+"/"+fileName+".pdf");</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Java-将-word-excel-ppt如何转pdf&quot;&gt;&lt;a href=&quot;#Java-将-word-excel-ppt如何转pdf&quot; class=&quot;headerlink&quot; title=&quot;Java 将 word,excel,ppt如何转pdf&quot;&gt;&lt;/a&gt;Java 将 word,excel,ppt如何转pdf&lt;/h2&gt;&lt;p&gt;首先：windows server下用 jacob; linux server下 用openoffice。&lt;br&gt;        1.&lt;strong&gt;本文中说的是windows server下用 jacob这一部分,之后说openoffice的解决方案。&lt;/strong&gt;&lt;br&gt;        2.&lt;strong&gt;本文中说的解决方案支持将doc,docx,xls,xlsx,ppt,pptx这些格式转成pdf。&lt;/strong&gt;&lt;br&gt;        3.&lt;strong&gt;jacob可以调用windows com组件，但不是不止这一种方案：可以搜“java调用com”，查看其它的解决方案&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
